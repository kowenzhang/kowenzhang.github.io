<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Do cool things for fun</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.kowen.cn/"/>
  <updated>2019-04-18T06:52:39.968Z</updated>
  <id>www.kowen.cn/</id>
  
  <author>
    <name>kowen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>挂载webdav作为网盘</title>
    <link href="www.kowen.cn/2019/04/12/%E6%8C%82%E8%BD%BDwebdav%E4%BD%9C%E4%B8%BA%E7%BD%91%E7%9B%98/"/>
    <id>www.kowen.cn/2019/04/12/挂载webdav作为网盘/</id>
    <published>2019-04-12T03:33:00.000Z</published>
    <updated>2019-04-18T06:52:39.968Z</updated>
    
    <content type="html"><![CDATA[<p>by <a href="https://www.kowen.cn">kowen</a><br>to <a href="https://www.jianshu.com/u/e938fd073edf" target="_blank" rel="noopener">简书</a>  </p>
<blockquote>
<p>webdav可以使用浏览器通过http访问,但很多情况下作为网盘访问更加方便,这里主要介绍一下windows和linux如何连接webdav作为网盘.</p>
</blockquote>
<a id="more"></a>
<h2 id="一-windows挂载webdav网盘"><a href="#一-windows挂载webdav网盘" class="headerlink" title="一. windows挂载webdav网盘"></a>一. windows挂载webdav网盘</h2><h3 id="1-1-修改注册表支持http访问webdav"><a href="#1-1-修改注册表支持http访问webdav" class="headerlink" title="1.1 修改注册表支持http访问webdav"></a>1.1 修改注册表支持http访问webdav</h3><p>如果WebDAV不是https的，win7、WIN10默认是添加不上的，需要修改注册表<br><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters</code><br>把BasicAuthLevel 值改成2，即同时支持http和https，默认只支持https.</p>
<h3 id="1-2-重启服务"><a href="#1-2-重启服务" class="headerlink" title="1.2 重启服务"></a>1.2 重启服务</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">net</span> stop webclient </div><div class="line"><span class="built_in">net</span> <span class="built_in">start</span> webclient</div></pre></td></tr></table></figure>
<h3 id="1-3-映射网络驱动器"><a href="#1-3-映射网络驱动器" class="headerlink" title="1.3 映射网络驱动器"></a>1.3 映射网络驱动器</h3><p>打开’计算机’,点击’映射网络驱动器’,文件夹中输入’<a href="http://webdav_URL" target="_blank" rel="noopener">http://webdav_URL</a>‘ 即可,然后输入用户名密码.</p>
<h2 id="二-linux挂载webdav网盘"><a href="#二-linux挂载webdav网盘" class="headerlink" title="二. linux挂载webdav网盘"></a>二. linux挂载webdav网盘</h2><h3 id="2-1-安装必要组件"><a href="#2-1-安装必要组件" class="headerlink" title="2.1 安装必要组件"></a>2.1 安装必要组件</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt install davfs2 <span class="comment">//ubuntu</span></div><div class="line">sudo pacman -S davfs2 <span class="comment">//arch, manjaro</span></div></pre></td></tr></table></figure>
<p>查看是否安装正确<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mount<span class="selector-class">.davfs</span> -h</div></pre></td></tr></table></figure></p>
<h3 id="2-2-查看当前用户的ID"><a href="#2-2-查看当前用户的ID" class="headerlink" title="2.2 查看当前用户的ID"></a>2.2 查看当前用户的ID</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">id</span> 用户名</div></pre></td></tr></table></figure>
<p><em>一般为1000</em></p>
<h3 id="2-3-手动挂载"><a href="#2-3-手动挂载" class="headerlink" title="2.3 手动挂载"></a>2.3 手动挂载</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir <span class="regexp">/mnt/</span>webdav</div><div class="line">sudo mount -o gid=<span class="number">1000</span>,uid=上一步查到的用户ID -t davfs http:<span class="regexp">//</span>webdav_url <span class="regexp">/mnt/</span>webdav</div></pre></td></tr></table></figure>
<p>过程中输入webdav的用户名密码</p>
<h3 id="2-4-卸载"><a href="#2-4-卸载" class="headerlink" title="2.4 卸载"></a>2.4 卸载</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo umount <span class="regexp">/mnt/</span>webdav</div></pre></td></tr></table></figure>
<h3 id="2-5-记住用户名密码"><a href="#2-5-记住用户名密码" class="headerlink" title="2.5 记住用户名密码"></a>2.5 记住用户名密码</h3><h4 id="2-5-1-编辑davfs2-conf"><a href="#2-5-1-编辑davfs2-conf" class="headerlink" title="2.5.1 编辑davfs2.conf"></a>2.5.1 编辑davfs2.conf</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">vi</span> /etc/davfs2/davfs2.<span class="keyword">conf</span></div></pre></td></tr></table></figure>
<ul>
<li>找到“use_locks”   </li>
<li>掉前面的 #  </li>
<li>然后把 1 改为 0  </li>
<li><p>保存    </p>
<h4 id="2-5-2-编辑secrets文件"><a href="#2-5-2-编辑secrets文件" class="headerlink" title="2.5.2 编辑secrets文件"></a>2.5.2 编辑secrets文件</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi <span class="regexp">/etc/</span>davfs2<span class="regexp">/secrets</span></div></pre></td></tr></table></figure>
</li>
<li><p>加入一行:<br><code>http://webdav_url 用户名 密码</code>  </p>
<p>再次挂载的时候就无需密码了  </p>
</li>
</ul>
<h3 id="2-6-开机自动挂载"><a href="#2-6-开机自动挂载" class="headerlink" title="2.6. 开机自动挂载"></a>2.6. 开机自动挂载</h3><blockquote>
<p>以下在manjaro18.04测试成功</p>
</blockquote>
<h4 id="2-6-1-首先完成上面5的步骤记住用户名和密码"><a href="#2-6-1-首先完成上面5的步骤记住用户名和密码" class="headerlink" title="2.6.1 首先完成上面5的步骤记住用户名和密码"></a>2.6.1 首先完成上面5的步骤记住用户名和密码</h4><h4 id="2-6-2-创建文件mnt-webdav-mount"><a href="#2-6-2-创建文件mnt-webdav-mount" class="headerlink" title="2.6.2 创建文件mnt-webdav.mount"></a>2.6.2 创建文件mnt-webdav.mount</h4><blockquote>
<p>注意把 <strong><a href="http://webdav_url" target="_blank" rel="noopener">http://webdav_url</a></strong> 换成自己webdav地址</p>
</blockquote>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi <span class="regexp">/etc/</span>systemd<span class="regexp">/system/m</span>nt-webdav.mount</div></pre></td></tr></table></figure>
<p>内容如下:<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="section">[Unit]</span></div><div class="line"><span class="attr">Description</span>=Mount WebDAV Service</div><div class="line"><span class="attr">After</span>=network-<span class="literal">on</span>line.target</div><div class="line"><span class="attr">Wants</span>=network-<span class="literal">on</span>line.target</div><div class="line"><span class="section"></span></div><div class="line">[Mount]</div><div class="line"><span class="attr">What</span>=http://webdav_url</div><div class="line"><span class="attr">Where</span>=/mnt/webdav</div><div class="line"><span class="attr">Options</span>=uid=<span class="number">1000</span>,file_mode=<span class="number">0664</span>,dir_mode=<span class="number">2775</span>,grpid</div><div class="line"><span class="attr">Type</span>=davfs</div><div class="line"><span class="attr">TimeoutSec</span>=<span class="number">15</span></div><div class="line"><span class="section"></span></div><div class="line">[Install]</div><div class="line"><span class="attr">WantedBy</span>=multi-user.target</div></pre></td></tr></table></figure></p>
<h4 id="2-6-3-创建文件mnt-webdav-automount"><a href="#2-6-3-创建文件mnt-webdav-automount" class="headerlink" title="2.6.3 创建文件mnt-webdav.automount"></a>2.6.3 创建文件mnt-webdav.automount</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi <span class="regexp">/etc/</span>systemd<span class="regexp">/system/m</span>nt-webdav.automount</div></pre></td></tr></table></figure>
<p>内容如下, TimeoutIdleSec是设置自动断开时间.<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="section">[Unit]</span></div><div class="line"><span class="attr">Description</span>=Mount WebDAV Service</div><div class="line"><span class="attr">After</span>=network-<span class="literal">on</span>line.target</div><div class="line"><span class="attr">Wants</span>=network-<span class="literal">on</span>line.target</div><div class="line"><span class="section"></span></div><div class="line">[Automount]</div><div class="line"><span class="attr">Where</span>=/mnt/webdav</div><div class="line"><span class="attr">TimeoutIdleSec</span>=<span class="number">300</span></div><div class="line"><span class="section"></span></div><div class="line">[Install]</div><div class="line"><span class="attr">WantedBy</span>=remote-fs.target</div></pre></td></tr></table></figure></p>
<h4 id="2-6-4-刷新服务并连接"><a href="#2-6-4-刷新服务并连接" class="headerlink" title="2.6.4 刷新服务并连接"></a>2.6.4 刷新服务并连接</h4><figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo<span class="keyword"> system</span>ctl daemon-reload</div><div class="line">sudo<span class="keyword"> system</span>ctl start mnt-webdav.automount</div></pre></td></tr></table></figure>
<h4 id="2-6-5-实现开始启动"><a href="#2-6-5-实现开始启动" class="headerlink" title="2.6.5 实现开始启动"></a>2.6.5 实现开始启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl <span class="built_in">enable</span> mnt-webdav.automount</div></pre></td></tr></table></figure>
<h2 id="三-参考资料"><a href="#三-参考资料" class="headerlink" title="三.参考资料"></a>三.参考资料</h2><ul>
<li><a href="https://wiki.archlinux.org/index.php/Davfs2#Using_systemd" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Davfs2#Using_systemd</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;by &lt;a href=&quot;https://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;br&gt;to &lt;a href=&quot;https://www.jianshu.com/u/e938fd073edf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;简书&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;webdav可以使用浏览器通过http访问,但很多情况下作为网盘访问更加方便,这里主要介绍一下windows和linux如何连接webdav作为网盘.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="干货" scheme="www.kowen.cn/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="网盘" scheme="www.kowen.cn/tags/%E7%BD%91%E7%9B%98/"/>
    
      <category term="webdav" scheme="www.kowen.cn/tags/webdav/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu18.04美化总结</title>
    <link href="www.kowen.cn/2018/08/08/2018-08-Ubuntu18-04%E7%BE%8E%E5%8C%96%E6%80%BB%E7%BB%93/"/>
    <id>www.kowen.cn/2018/08/08/2018-08-Ubuntu18-04美化总结/</id>
    <published>2018-08-08T09:11:25.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<p>by <a href="https://www.kowen.cn">kowen</a>  <a href="https://www.jianshu.com/u/e938fd073edf" target="_blank" rel="noopener">简书</a><br><strong>话不多说先来几张图片镇镇楼，这里用的是仿Mac主题，喜欢其他的主题可以去gnome-look上下载</strong><br><a id="more"></a><br><img src="https://upload-images.jianshu.io/upload_images/2763198-f17a4c08ba202351.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ubuntu18.04仿Mac1"><br><img src="https://upload-images.jianshu.io/upload_images/2763198-30d1962ef6e9832d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ubuntu18.04仿Mac2"><br><img src="https://upload-images.jianshu.io/upload_images/2763198-95a4564e283a0bb5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ubuntu18.04仿Mac3"></p>
<h2 id="桌面美化"><a href="#桌面美化" class="headerlink" title="桌面美化"></a>桌面美化</h2><h3 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h3><p>gnome3主题资源： <a href="https://www.gnome-look.org/" target="_blank" rel="noopener">https://www.gnome-look.org/</a></p>
<p>在此使用MacOs主题： <a href="https://www.gnome-look.org/s/Gnome/p/1013714/" target="_blank" rel="noopener">https://www.gnome-look.org/s/Gnome/p/1013714/</a> ，选择file下载需要的主题、图标、字体和背景等资源。其中有多个主题（以Sierra开头），可以只下载需要的，带solid的是非透明主题。</p>
<p>主题解压后的目录放到/usr/share/themes/，图标放到/usr/share/icons/，背景放到/usr/share/backgrounds/</p>
<h3 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get <span class="keyword">update</span></div><div class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> gnome-tweak-tool</div><div class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> gnome-shell-extensions</div><div class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span>  gnome-shell-extension-dashtodock</div></pre></td></tr></table></figure>
<h3 id="美化过程"><a href="#美化过程" class="headerlink" title="美化过程"></a>美化过程</h3><ul>
<li>打开tweak，选择扩展，打开User themes选项</li>
<li><p>选择外观，按以下图片进行设置<br>如果shell上有感叹号，关闭tweak，按Alt+F2，输入r，执行后重新打开tweak再设置shell选项。<br><img src="https://upload-images.jianshu.io/upload_images/2763198-e7ac9e824ce18f1e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Tweaks设置"></p>
</li>
<li><p>调整标题栏按钮位置<br>选择窗口，滑到最下面，把放置改为左  </p>
</li>
<li>虽然桌面现在看起来很像mac了，但是dock这时依旧是长条状的，下面使用dash to dock插件使dock居中<br>选择扩展，开启Dash to dock，点击设置图标，按图片进行设置<br><img src="https://upload-images.jianshu.io/upload_images/2763198-aa10c1e9cbb7b4aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Dash to Dock"></li>
</ul>
<h2 id="启动美化"><a href="#启动美化" class="headerlink" title="启动美化"></a>启动美化</h2><ul>
<li>去 <a href="https://www.opendesktop.org/p/1154790/下载文件，解压备用" target="_blank" rel="noopener">https://www.opendesktop.org/p/1154790/下载文件，解压备用</a></li>
<li>把解压的Ubuntu-paw文件夹复制到/usr/share/plymouth/themes/</li>
<li><p>备份并编辑文件</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo cp <span class="regexp">/etc/</span>alternatives<span class="regexp">/default.plymouth /</span>etc<span class="regexp">/alternatives/</span><span class="keyword">default</span>.plymouth.bak</div><div class="line">sudo gedit <span class="regexp">/etc/</span>alteernatives/<span class="keyword">default</span>.plymouth</div></pre></td></tr></table></figure>
</li>
<li><p>最后两行按照以下方式修改为新加入的启动主题<br><img src="https://upload-images.jianshu.io/upload_images/2763198-f9561469dae9bf23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改启动主题"></p>
</li>
</ul>
<h2 id="登录界面美化"><a href="#登录界面美化" class="headerlink" title="登录界面美化"></a>登录界面美化</h2><p>登录界面美化即是修改GDM (GNOME Display Manager,GDM)主题，可以使用 <a href="https://www.opendesktop.org/s/Gnome/p/1207015/" target="_blank" rel="noopener">https://www.opendesktop.org/s/Gnome/p/1207015/</a> ，但我在试验中发现一些问题。所以只改了登录背景。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo cp /etc/alternatives/gdm3<span class="selector-class">.css</span> /etc/alternatives/gdm3<span class="selector-class">.css</span><span class="selector-class">.bak</span></div><div class="line">sudo gedit /etc/alternatives/gdm3.css</div></pre></td></tr></table></figure></p>
<p>找到lockDialogGroup并更改为以下内容：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#lockDialogGroup</span> &#123;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#2c001e</span> <span class="built_in">url</span>(file:///usr/share/backgrounds/HighSierra-wallpapers/Sierra.jpg);         </div><div class="line">  <span class="attribute">background-repeat</span>: no-repeat;</div><div class="line">  <span class="attribute">background-size</span>: cover;</div><div class="line">  <span class="attribute">background-position</span>: center; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>锁定之后即可看到效果，以下是手机拍摄的。<br><img src="https://upload-images.jianshu.io/upload_images/2763198-e2fd646b86e1876d.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="锁屏"></p>
<blockquote>
<p>以上是对桌面、启动和锁屏界面的美化过程，还有字体、光标等美化感觉Ubuntu自带的已经非常不错了，没有深究，喜欢的快试试吧！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;by &lt;a href=&quot;https://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;  &lt;a href=&quot;https://www.jianshu.com/u/e938fd073edf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;简书&lt;/a&gt;&lt;br&gt;&lt;strong&gt;话不多说先来几张图片镇镇楼，这里用的是仿Mac主题，喜欢其他的主题可以去gnome-look上下载&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux下git乱码解决</title>
    <link href="www.kowen.cn/2018/07/30/linux%E4%B8%8Bgit%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/"/>
    <id>www.kowen.cn/2018/07/30/linux下git乱码解决/</id>
    <published>2018-07-30T01:31:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu18.04出来后尝鲜，把原来的16.04格了重装了，但在使用git的时候出现了一些问题。记录备查。<br><a id="more"></a></p>
<h3 id="git-log中文乱码"><a href="#git-log中文乱码" class="headerlink" title="git log中文乱码"></a>git log中文乱码</h3><p>使用<code>git log</code>查看日志的时候，中文会被显示成为数字，应该是UTF-8编码，使用以下命令解决：<br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">config</span> --<span class="keyword">global</span> i18n<span class="variable">.commitencoding</span> utf-<span class="number">8</span></div><div class="line">git <span class="keyword">config</span> --<span class="keyword">global</span> i18n<span class="variable">.logoutputencoding</span> utf-<span class="number">8</span></div><div class="line"><span class="keyword">export</span> LESSCHARSET=utf-<span class="number">8</span></div></pre></td></tr></table></figure></p>
<h3 id="git-status中文乱码"><a href="#git-status中文乱码" class="headerlink" title="git status中文乱码"></a>git status中文乱码</h3><p>使用前面的命令解决了查看日志乱码的问题，但是在使用<code>git status</code>的时候，依然出现乱码，使用以下命令解决：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --<span class="keyword">global</span> core.quotepath <span class="literal">false</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ubuntu18.04出来后尝鲜，把原来的16.04格了重装了，但在使用git的时候出现了一些问题。记录备查。&lt;br&gt;
    
    </summary>
    
      <category term="git" scheme="www.kowen.cn/categories/git/"/>
    
    
      <category term="git" scheme="www.kowen.cn/tags/git/"/>
    
      <category term="乱码" scheme="www.kowen.cn/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装gitolite搭建git服务器</title>
    <link href="www.kowen.cn/2017/12/14/ubuntu%E5%AE%89%E8%A3%85gitolite%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>www.kowen.cn/2017/12/14/ubuntu安装gitolite搭建git服务器/</id>
    <published>2017-12-14T07:48:09.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<p>本文讲解在ubuntu上安装gitolite，为客户端提供git仓库服务器功能。ubuntu版本：server 16.04</p>
<a id="more"></a>
<h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><ol>
<li><p>安装gitolite前，要安装 git，openssh-server和 openssh-client<br><code>sudo apt-get update</code><br><code>sudo apt-get -y install git openssh-server openssh-client</code></p>
</li>
<li><p>准备好你的ssh私钥和公钥<br>没有的话可在本地执行<code>ssh-keygen -t rsa -C &quot;yourname@example.com</code> 生成一个，生成后在~/.ssh/目录里，id_rsa是私钥，id_rsa.pub是公钥,文件生成后可以改名。</p>
</li>
<li><p>上传公钥<br>将公钥上传到服务器备用，比如是<em>/tmp/YourName.pub</em></p>
</li>
</ol>
<h2 id="添加git用户"><a href="#添加git用户" class="headerlink" title="添加git用户"></a>添加git用户</h2><p><code>sudo adduser --system --shell /bin/sh --group --disabled-password --home /home/git git</code>  </p>
<ul>
<li>使用命令添加加上–system参数，用户就不会在登陆界面显示</li>
<li>home是git用户主目录，也是git仓库的存储目录，如果仓库比较大可以放在别的盘中，比如我的就是/data/git</li>
</ul>
<h2 id="安装gitolite"><a href="#安装gitolite" class="headerlink" title="安装gitolite"></a>安装gitolite</h2><ol>
<li>登录到git用户<br><code>sudo su - git</code>  </li>
<li>确保 <strong>~/.ssh/authorized_keys</strong> 文件不存在或者为空</li>
<li>把公钥拷贝到git主目录下<br><code>cp /tmp/YourName.pub $/Home/YourName.pub</code></li>
<li><p>下载并安装gitolite</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone https:<span class="comment">//github.com/sitaramc/gitolite</span></div><div class="line">mkdir -<span class="selector-tag">p</span> <span class="variable">$HOME</span>/bin</div><div class="line">gitolite/install -to <span class="variable">$HOME</span>/bin</div></pre></td></tr></table></figure>
</li>
<li><p>初始化gitolite, 同时配置管理员<br><code>gitolite setup -pk YourName.pub</code><br>如果以上命令提示找不到，执行下面的代替<br><code>$HOME/bin/gitolite setup -pk YourName.pub</code></p>
</li>
</ol>
<h3 id="克隆管理库到本地"><a href="#克隆管理库到本地" class="headerlink" title="克隆管理库到本地"></a>克隆管理库到本地</h3><p>不要直接在服务器上创建和管理仓库，仓库管理是通过叫gitolite-admin的仓库进行的，这个仓库在初始化gitolite时就已经生成了，管理员可以克隆到本地进行配置，在客户端执行  </p>
<p><code>git clone git@服务器地址/gitolite-admin.git</code>  </p>
<p>如果提示输入密码，编辑客户端的～/.ssh/config文件，添加以下内容：</p>
<pre><code>Host 服务器地址
    HostName 服务器地址
    User git
    Port 22
    IdentityFile /home/用户名/.ssh/私钥文件名
</code></pre><h3 id="添加用户和仓库"><a href="#添加用户和仓库" class="headerlink" title="添加用户和仓库"></a>添加用户和仓库</h3><p>gitolite-admin里面两个文件夹keydir和conf：</p>
<ol>
<li>keydir存储用户的公钥，添加用户可以直接拷贝用户的公钥到此文件夹；</li>
<li>conf目录里的gitolite.conf是配置文件，格式如下：<figure class="highlight nsis"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">repogitolite-<span class="literal">admin</span></div><div class="line">    RW+     =   id_rsa</div><div class="line">repo    testing</div><div class="line">	    RW+     =   @<span class="literal">all</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>比如要添加一个仓库‘foo’,并给alice，bob和carol不同的权限，首先把他们的公钥（alice.pub,bob.pub,carol.pub）拷贝到keydir；然后编辑conf/gitolite.conf添加：</p>
<pre><code>repo foo
    RW+         =   alice
    RW          =   bob
    R           =   carol
</code></pre><p>最后把修改push到服务器：</p>
<pre><code>git add conf
git add keydir
git commit -m &quot;added foo, gave access to alice, bob, carol&quot;
git push
</code></pre><p>服务器会自动添加用户到~/.ssh/authorized_keys，并且添加一个新的空仓库’foo’。</p>
<p>上述操作完成后，alice、bob和carol就可以将仓库克隆到本地:<br><code>git clone git@服务器地址:foo</code></p>
<p>查看对仓库的操作权限，可以在客户端执行<br><code>ssh git@服务器地址 info</code></p>
<h2 id="访问规则示例"><a href="#访问规则示例" class="headerlink" title="访问规则示例"></a>访问规则示例</h2><p>gitolite的访问规则功能强大，以下是示例：</p>
<pre><code>repo foo
    RW+                     =   alice
    -   master              =   bob
    -   refs/tags/v[0-9]    =   bob
    RW                      =   bob
    RW  refs/tags/v[0-9]    =   carol
    R                       =   dave
</code></pre><p>规则解释：　　</p>
<ul>
<li>alice对所有branch和tag拥有所有权限－－create, push, delete, rewind/overwrite等等</li>
<li>bob可以创建或者fast-forward　push名字中不以’master‘开头的branch，可以创建不以ｖ+数字开头的tag</li>
<li>carol只可以创建v+数字开头的tag</li>
<li>dave只有只读权限，可以clone/fetch。</li>
</ul>
<h2 id="管理组"><a href="#管理组" class="headerlink" title="管理组"></a>管理组</h2><p>某些时候使用组来管理用户是非常方便的，下面是两个组：  </p>
<pre><code>@staff      =   alice bob carol
@interns    =   ashok
repo secret
    RW      =   @staff
repo foss
    RW+     =   @staff
    RW      =   @interns
</code></pre><p>组成员可以累加，下面对＠staff的定义和上面的效果是一样的：  </p>
<pre><code>@staff      =   alice bob
@staff      =   carol
</code></pre><p>组也可以包含其他组：</p>
<pre><code>@all-devs   =   @staff @interns
</code></pre><p>@all是一个特殊组名称，既可以指所有的仓库，可以指所有的用户。</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>客户端可以通过ssh远程执行一些命令，以下命令可以查看帮助：<br><code>ssh git@host help</code><br>info是最长用到的命令，在命令后跟上’-h’可以查看命令的用法。  </p>
<p>在服务器端有非常丰富的使用命令，运行<code>gitolite help</code>查看详细信息。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/sitaramc/gitolite" target="_blank" rel="noopener">https://github.com/sitaramc/gitolite</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文讲解在ubuntu上安装gitolite，为客户端提供git仓库服务器功能。ubuntu版本：server 16.04&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ubuntu分区并挂载超大硬盘</title>
    <link href="www.kowen.cn/2017/11/24/ubuntu%E5%88%86%E5%8C%BA%E5%B9%B6%E6%8C%82%E8%BD%BD%E8%B6%85%E5%A4%A7%E7%A1%AC%E7%9B%98/"/>
    <id>www.kowen.cn/2017/11/24/ubuntu分区并挂载超大硬盘/</id>
    <published>2017-11-24T08:05:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<p>FDISK工具无法创建大于２ＴＢ的分区，需要使用ｐａｒｔｅｄ工具进行分区</p>
<a id="more"></a>
<p>操作系统：　ubuntu server 16.04</p>
<h3 id="使用fdisk-l-查看硬盘大小"><a href="#使用fdisk-l-查看硬盘大小" class="headerlink" title="使用fdisk -l 查看硬盘大小"></a>使用fdisk -l 查看硬盘大小</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">ubuntu@UbuntuServer:~$ sudo fdisk -l</div><div class="line">Disk /dev/sda:<span class="number"> 100 </span>GiB,<span class="number"> 107374182400 </span>bytes,<span class="number"> 209715200 </span>sectors</div><div class="line">Units: sectors of<span class="number"> 1 </span>*<span class="number"> 512 </span>=<span class="number"> 512 </span>bytes</div><div class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</div><div class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</div><div class="line">Disklabel type: dos</div><div class="line">Disk identifier: 0xd0bc3dd4</div><div class="line"></div><div class="line">Device     Boot   Start       End   Sectors  Size Id Type</div><div class="line">/dev/sda1  *      <span class="number"> 2048 </span>  <span class="number"> 999423 </span>  <span class="number"> 997376 </span> 487M<span class="number"> 83 </span>Linux</div><div class="line">/dev/sda2      <span class="number"> 1001470 </span>209713151<span class="number"> 208711682 </span>99.5G <span class="number"> 5 </span>Extended</div><div class="line">/dev/sda5      <span class="number"> 1001472 </span>209713151<span class="number"> 208711680 </span>99.5G 8e Linux LVM</div><div class="line"></div><div class="line"></div><div class="line">Disk /dev/sdb:<span class="number"> 5 </span>TiB,<span class="number"> 5497558138880 </span>bytes,<span class="number"> 10737418240 </span>sectors</div><div class="line">Units: sectors of<span class="number"> 1 </span>*<span class="number"> 512 </span>=<span class="number"> 512 </span>bytes</div><div class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</div><div class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</div><div class="line"></div><div class="line"></div><div class="line">Disk /dev/mapper/UbuntuServer--vg-root: 97.5 GiB,<span class="number"> 104710799360 </span>bytes,<span class="number"> 204513280 </span>sectors</div><div class="line">Units: sectors of<span class="number"> 1 </span>*<span class="number"> 512 </span>=<span class="number"> 512 </span>bytes</div><div class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</div><div class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</div><div class="line"></div><div class="line"></div><div class="line">Disk /dev/mapper/UbuntuServer--vg-swap_1:<span class="number"> 2 </span>GiB,<span class="number"> 2147483648 </span>bytes,<span class="number"> 4194304 </span>sectors</div><div class="line">Units: sectors of<span class="number"> 1 </span>*<span class="number"> 512 </span>=<span class="number"> 512 </span>bytes</div><div class="line">Sector size (logical/physical):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</div><div class="line">I/O size (minimum/optimal):<span class="number"> 512 </span>bytes /<span class="number"> 512 </span>bytes</div></pre></td></tr></table></figure>
<p>可见新硬盘大小为5T，使用fdisk命令最大只能创建2T的分区，需要使用parted工具创建分区。</p>
<h3 id="使用parted工具分区"><a href="#使用parted工具分区" class="headerlink" title="使用parted工具分区"></a>使用parted工具分区</h3><p>Linux下的GPT分区，这是另外一种分区，针对MBR分区，它有很多优点：　　<br>（1）几乎突破了分区个数的限制，在GPT分区表中最多可以支持128个主分区。<br>（2）单个分区容量几乎没有限制，单个分区最大支持1EB容量。</p>
<p>因此GPT分区中，主分区和扩展分区，逻辑分区的概念已经很模糊了。甚至没必要这么叫。其实我们知道扩展分区之所以存在，意义就是为了解决MBR中分区个数的限制问题。既然在GPT中，分区个数几乎没有了限制，那么这些概念当然就模糊起来了。<br>使用的工具是”parted”，这个工具既可以做MBR分区，又可以做GPT分区。<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo parted <span class="regexp">/dev/</span>sdb <span class="comment">#进入parted</span></div><div class="line">mklabel gpt <span class="comment">#将磁盘设置为gpt格式，</span></div><div class="line">mkpart primary <span class="number">0</span> -<span class="number">1</span> <span class="comment">#将磁盘所有的容量设置为GPT格式</span></div><div class="line">print <span class="comment">#查看分区结果</span></div></pre></td></tr></table></figure></p>
<h3 id="格式化硬盘并挂载"><a href="#格式化硬盘并挂载" class="headerlink" title="格式化硬盘并挂载"></a>格式化硬盘并挂载</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkfs.ext4 -F <span class="regexp">/dev/</span>sdb1 <span class="comment"># 将刚刚分出来的sda1格式化为ext4的格式,根据硬盘大小需要等待一段时间</span></div></pre></td></tr></table></figure>
<p>创建硬盘挂载点，修改/etc/fstab使得硬盘能够一直挂载在系统中。<br>在新版本的ubuntu系统中/etc/fstab推荐使用分区的uuid来定义分区的挂载点，所以需要首先得到磁盘的uuid，这可以通过blkid命令得到<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ubuntu<span class="meta">@UbuntuServer</span>:~$ sudo blkid -p <span class="regexp">/dev/</span>sdb1</div><div class="line"><span class="regexp">/dev/</span><span class="string">sdb1:</span> UUID=<span class="string">"f7b2ec9e-1d6c-4248-9d80-3b5d05b93d68"</span> VERSION=<span class="string">"1.0"</span> TYPE=<span class="string">"ext4"</span> USAGE=<span class="string">"filesystem"</span> PART_ENTRY_SCHEME=<span class="string">"gpt"</span> PART_ENTRY_NAME=<span class="string">"primary"</span> PART_ENTRY_UUID=<span class="string">"7e5600a0-1df2-4d7c-82e0-15baad67a80c"</span> PART_ENTRY_TYPE=<span class="string">"0fc63daf-8483-4772-8e79-3d69d8477de4"</span> PART_ENTRY_NUMBER=<span class="string">"1"</span> PART_ENTRY_OFFSET=<span class="string">"34"</span> PART_ENTRY_SIZE=<span class="string">"10737416254"</span> PART_ENTRY_DISK=<span class="string">"8:16"</span></div></pre></td></tr></table></figure></p>
<p>在/etc/fstab中添加下面一行<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UUID=f7b2ec9e<span class="number">-1</span>d6c<span class="number">-4248</span><span class="number">-9</span>d80<span class="number">-3</span>b5d05b93d68 /NextCloud ext4 defaults <span class="number">0</span> <span class="number">0</span></div></pre></td></tr></table></figure></p>
<h3 id="确认分区"><a href="#确认分区" class="headerlink" title="确认分区"></a>确认分区</h3><p>重启系统，使用df -H 命令查看分区情况<br><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ubuntu@UbuntuServer:/$ df -H</div><div class="line">Filesystem                         Size  Used Avail Use<span class="comment">% Mounted on</span></div><div class="line">udev                               <span class="number">2.1</span>G     <span class="number">0</span>  <span class="number">2.1</span>G   <span class="number">0</span><span class="comment">% /dev</span></div><div class="line">tmpfs                              <span class="number">415</span>M  <span class="number">6.4</span>M  <span class="number">408</span>M   <span class="number">2</span><span class="comment">% /run</span></div><div class="line">/dev/mapper/UbuntuServer--vg-root  <span class="number">103</span>G  <span class="number">5.7</span>G   <span class="number">92</span>G   <span class="number">6</span><span class="comment">% /</span></div><div class="line">tmpfs                              <span class="number">2.1</span>G     <span class="number">0</span>  <span class="number">2.1</span>G   <span class="number">0</span><span class="comment">% /dev/shm</span></div><div class="line">tmpfs                              <span class="number">5.3</span>M     <span class="number">0</span>  <span class="number">5.3</span>M   <span class="number">0</span><span class="comment">% /run/lock</span></div><div class="line">tmpfs                              <span class="number">2.1</span>G     <span class="number">0</span>  <span class="number">2.1</span>G   <span class="number">0</span><span class="comment">% /sys/fs/cgroup</span></div><div class="line">/dev/sda1                          <span class="number">495</span>M  <span class="number">111</span>M  <span class="number">359</span>M  <span class="number">24</span><span class="comment">% /boot</span></div><div class="line">/dev/sdb1                          <span class="number">5.5</span>T  <span class="number">2.3</span>G  <span class="number">5.2</span>T   <span class="number">1</span><span class="comment">% /NextCloud</span></div><div class="line">tmpfs                              <span class="number">415</span>M     <span class="number">0</span>  <span class="number">415</span>M   <span class="number">0</span><span class="comment">% /run/user/1000</span></div></pre></td></tr></table></figure></p>
<p>挂载成功．</p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://jingyan.baidu.com/article/48b37f8ddee2bd1a6464881b.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/48b37f8ddee2bd1a6464881b.html</a><br><a href="http://www.linuxidc.com/Linux/2015-11/125397.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2015-11/125397.htm</a><br><a href="http://blog.csdn.net/scaleqiao/article/details/45071489" target="_blank" rel="noopener">http://blog.csdn.net/scaleqiao/article/details/45071489</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;FDISK工具无法创建大于２ＴＢ的分区，需要使用ｐａｒｔｅｄ工具进行分区&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="www.kowen.cn/categories/linux/"/>
    
    
      <category term="parted" scheme="www.kowen.cn/tags/parted/"/>
    
      <category term="GPT" scheme="www.kowen.cn/tags/GPT/"/>
    
  </entry>
  
  <entry>
    <title>docker和docker-compose安装教程</title>
    <link href="www.kowen.cn/2017/10/23/docker%E5%92%8Cdocker-compose%E5%AE%89%E8%A3%85/"/>
    <id>www.kowen.cn/2017/10/23/docker和docker-compose安装/</id>
    <published>2017-10-23T06:52:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>运行一下命令，如果连接不稳定多试几次</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL https://get.docker.com/ | sh</div></pre></td></tr></table></figure>
<p>验证安装是否成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker -v</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>将当前用户加入docker组，否则必须用sudo才能执行docker命令<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo usermod -aG docker <span class="string">[当前用户名]</span></div><div class="line">sudo service docker restart</div></pre></td></tr></table></figure></p>
<h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">curl -L https:<span class="regexp">//gi</span>thub.com<span class="regexp">/docker/</span>compose<span class="regexp">/releases/</span>download<span class="regexp">/1.10.0/</span>docker-compose-`uname -s`-`uname -m` &gt; docker-compose</div><div class="line"></div><div class="line">sudo cp docker-compose <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span></div><div class="line"></div><div class="line">sudo chmod +x <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>docker-compose</div></pre></td></tr></table></figure>
<h2 id="配置国内镜像源"><a href="#配置国内镜像源" class="headerlink" title="配置国内镜像源"></a>配置国内镜像源</h2><p>默认的docker镜像源在墙外，下载速度慢，可以配置国内镜像源提高下载速度，编辑文件添加以下选项 /etc/docker/daemon.json（没有该文件的话，请先建一个）：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://docker.mirrors.ustc.edu.cn"</span>]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装docker&quot;&gt;&lt;a href=&quot;#安装docker&quot; class=&quot;headerlink&quot; title=&quot;安装docker&quot;&gt;&lt;/a&gt;安装docker&lt;/h2&gt;&lt;p&gt;运行一下命令，如果连接不稳定多试几次&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -sSL https://get.docker.com/ | sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;验证安装是否成功&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker -v&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="www.kowen.cn/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="docker" scheme="www.kowen.cn/tags/docker/"/>
    
      <category term="docker-compose" scheme="www.kowen.cn/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>lighttpd配置https访问</title>
    <link href="www.kowen.cn/2017/10/17/lighttpd%E9%85%8D%E7%BD%AEhttps%E8%AE%BF%E9%97%AE/"/>
    <id>www.kowen.cn/2017/10/17/lighttpd配置https访问/</id>
    <published>2017-10-17T06:31:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文介绍了如何在lighttpd上配置https访问，使用Let’s Encrypt获取免费SSL证书，以及自动更新证书<br>by <a href="https://www.kowen.cn">kowen</a> </p>
</blockquote>
<h2 id="安装openssl"><a href="#安装openssl" class="headerlink" title="安装openssl"></a>安装openssl</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install openssl*</div></pre></td></tr></table></figure>
<p>执行以下命令看到有（ssl）即代表成功<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">lighttpd -v</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="使用Let’s-Encrypt获取免费ssl证书"><a href="#使用Let’s-Encrypt获取免费ssl证书" class="headerlink" title="使用Let’s Encrypt获取免费ssl证书"></a>使用Let’s Encrypt获取免费ssl证书</h2><p>let’s encrypt是比较流行的一个免费ssl证书颁发机构，我们使用简易的脚本来获取，见参考资料1</p>
<ol>
<li><p>建立目录，下载脚本</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">mkdir</span> letsencrypt</div><div class="line"><span class="keyword">cd</span> letsencrypt</div><div class="line">wget http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/xdtianyu/scripts/master/lets-encrypt/letsencrypt.<span class="keyword">conf</span></div><div class="line">wget http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/xdtianyu/scripts/master/lets-encrypt/letsencrypt.<span class="keyword">sh</span></div><div class="line">chmod +<span class="keyword">x</span> letsencrypt.<span class="keyword">sh</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改配置文件letsencrypt.conf，把 DOMAIN_KEY DOMAIN_DIR DOMAINS 三个参数改为你自己的信息，注意把LIGHTTPD=TRUE前的#号删除，否则不能生成pem文件。比如：</p>
<figure class="highlight protobuf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ACCOUNT_KEY=<span class="string">"letsencrypt-account.key"</span>  </div><div class="line">DOMAIN_KEY=<span class="string">"kowen.cn.key"</span>  </div><div class="line">DOMAIN_DIR=<span class="string">"/var/www/blog-public"</span>  </div><div class="line">DOMAINS=<span class="string">"DNS:kowen.cn,DNS:www.kowen.cn"</span>  </div><div class="line">\#ECC=TRUE  </div><div class="line">LIGHTTPD=TRUE</div></pre></td></tr></table></figure>
</li>
</ol>
<p><em>注意：需要已经绑定DOMAINS的域名到 DOMAIN_DIR　指定的目录，即通过 <a href="http://kowen.cn" target="_blank" rel="noopener">http://kowen.cn</a> <a href="http://www.kowen.cn">http://www.kowen.cn</a> 可以访问到 /var/www/blog-public 目录，用于域名的验证．否则会出现错误</em></p>
<ol>
<li>执行命令生成一系列文件<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./letsencrypt.<span class="keyword">sh</span> letsencrypt.<span class="keyword">conf</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>里面有两个lighttpd用到的文件：<br>　lets-encrypt-x3-cross-signed.pem和kowen.pem，<strong>其中kowen.pem是lighttpd配置文件中的ssl.pemfile，lets-encrypt-x3-cross-signed.pem是ssl.ca-file</strong></p>
<h2 id="配置lighttpd"><a href="#配置lighttpd" class="headerlink" title="配置lighttpd"></a>配置lighttpd</h2><p>通过编辑配置文件 /etc/lighttpd/lighttpd.conf来启用ssl，有几种方式可供选择。<em>配置完成后要重启lighttpd服务生效。</em></p>
<ol>
<li><p>让服务器仅提供https访问，全局设置中添加ssl配置，更改服务端口为443</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ssl<span class="selector-class">.engine</span>                  = <span class="string">"enable"</span></div><div class="line">ssl<span class="selector-class">.pemfile</span>                 = <span class="string">"/root/letsencrypt/kowen.pem"</span></div><div class="line">ssl<span class="selector-class">.ca-file</span>                 = <span class="string">"/root/letsencrypt/lets-encrypt-x3-cross-signed.pem"</span></div><div class="line">server<span class="selector-class">.port</span>                 = <span class="number">443</span>  ＃将原来的端口改为<span class="number">443</span></div></pre></td></tr></table></figure>
</li>
<li><p>不改变原配置，添加443端口访问</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$SERVER</span>[<span class="string">"socket"</span>] == <span class="string">":443"</span> &#123;  </div><div class="line">    ssl<span class="selector-class">.engine</span>   = <span class="string">"enable"</span>   </div><div class="line">    ssl<span class="selector-class">.pemfile</span>  = <span class="string">"/etc/lighttpd/certs/www.example.com.pem"</span> </div><div class="line">    ssl<span class="selector-class">.ca-file</span>  = <span class="string">"/etc/lighttpd/fullchain.pem"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>设置443端口为新的虚拟主机</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$SERVER[<span class="string">"socket"</span>] == <span class="string">":443"</span> &#123;  </div><div class="line">         server.<span class="attr">document-root</span> = <span class="string">"/srv/ssl"</span> <span class="comment"># use your ssl directory here  </span></div><div class="line">         ssl.<span class="attr">engine</span>  = <span class="string">"enable"</span>   </div><div class="line">         ssl.<span class="attr">pemfile</span>  = &gt;<span class="string">"/etc/lighttpd/certs/www.example.com.pem"</span>    </div><div class="line">         ssl.<span class="attr">ca-file</span>  = <span class="string">"/etc/lighttpd/fullchain.pem"</span></div><div class="line"> &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>为不同的虚拟主机配置不同的证书文件</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$HTTP</span>[<span class="string">"host"</span>] == <span class="string">"www.example.org"</span> &#123;  </div><div class="line">        ssl<span class="selector-class">.pemfile</span> = <span class="string">"/etc/lighttpd/certs/www.example.org.pem"</span>   </div><div class="line">        sl<span class="selector-class">.ca-file</span>  = <span class="string">"/etc/lighttpd/fullchain.pem"</span>  </div><div class="line">&#125;  </div><div class="line"><span class="variable">$HTTP</span>[<span class="string">"host"</span>] == <span class="string">"mail.example.org"</span> &#123;    </div><div class="line">        ssl<span class="selector-class">.pemfile</span> = <span class="string">"/etc/lighttpd/certs/mail.example.org.pem"</span>   </div><div class="line">        sl<span class="selector-class">.ca-file</span>  = <span class="string">"/etc/lighttpd/fullchain.pem"</span>  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="自动每月更新证书"><a href="#自动每月更新证书" class="headerlink" title="自动每月更新证书"></a>自动每月更新证书</h2><p>Let’s Encrypt有有效期，需要续期才能继续使用</p>
<p>编辑定时任务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">crontab <span class="_">-e</span></div></pre></td></tr></table></figure></p>
<p>添加以下任务，根据你的Letsencrypt脚本目录进行相应修改<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># m h  dom mon dow   command  </span></div><div class="line">  <span class="number">0</span> <span class="number">0</span>   <span class="number">1</span>   *   *    <span class="regexp">/root/letsencrypt</span><span class="regexp">/letsencrypt.sh /root</span><span class="regexp">/letsencrypt/letsencrypt</span>.conf <span class="meta">&gt;&gt; </span>/var/log/lets-encrypt.log&gt;&amp;<span class="number">1</span></div></pre></td></tr></table></figure></p>
<h2 id="重定向http服务到https-如果需要"><a href="#重定向http服务到https-如果需要" class="headerlink" title="重定向http服务到https(如果需要)"></a>重定向http服务到https(如果需要)</h2><p>首先要在配置中添加重定向组件：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server.modules = (  </div><div class="line">      <span class="params">...</span>  </div><div class="line">      <span class="string">"mod_redirect"</span>,   </div><div class="line">      <span class="params">...</span>  </div><div class="line">)</div></pre></td></tr></table></figure></p>
<p>然后配置虚拟主机80端口重定向到https服务：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$SERVER</span>[<span class="string">"socket"</span>] == <span class="string">":80"</span> &#123;  </div><div class="line">        <span class="variable">$HTTP</span>[<span class="string">"host"</span>] =~ <span class="string">"example.org"</span> &#123;  </div><div class="line">         url<span class="selector-class">.redirect</span> = ( <span class="string">"^/(.*)"</span> =&gt; <span class="string">"https://example.org/$1"</span> )  </div><div class="line">          server<span class="selector-class">.name</span>                 = <span class="string">"example.org"</span>   </div><div class="line">        &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>也可以重定向所有端口到对应https服务：<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$SERVER[<span class="string">"socket"</span>] == <span class="string">":80"</span> &#123;</div><div class="line">  $HTTP[<span class="string">"host"</span>] =~ <span class="string">"(.*)"</span> &#123;</div><div class="line">    url.redirect = ( <span class="string">"^/(.*)"</span> =&gt; <span class="string">"https://%1/$1"</span> )</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li>[1] <a href="https://github.com/xdtianyu/scripts/blob/master/lets-encrypt/README-CN.md" target="_blank" rel="noopener">一个快速获取/更新 Let’s encrypt 证书的 shell script</a></li>
<li>[2] <a href="https://wiki.archlinux.org/index.php/Lighttpd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#SSL" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Lighttpd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#SSL</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文介绍了如何在lighttpd上配置https访问，使用Let’s Encrypt获取免费SSL证书，以及自动更新证书&lt;br&gt;by &lt;a href=&quot;https://www.kowen.cn&quot;&gt;kowen&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装openssl&quot;&gt;&lt;a href=&quot;#安装openssl&quot; class=&quot;headerlink&quot; title=&quot;安装openssl&quot;&gt;&lt;/a&gt;安装openssl&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;apt-get install openssl*&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行以下命令看到有（ssl）即代表成功&lt;br&gt;&lt;figure class=&quot;highlight ebnf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;lighttpd -v&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="lighttpd" scheme="www.kowen.cn/tags/lighttpd/"/>
    
      <category term="https" scheme="www.kowen.cn/tags/https/"/>
    
      <category term="Lets encrypt" scheme="www.kowen.cn/tags/Lets-encrypt/"/>
    
  </entry>
  
  <entry>
    <title>搭建你自己的私有云盘——Nextcloud配置教程</title>
    <link href="www.kowen.cn/2017/10/10/%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98%E2%80%94%E2%80%94Nextcloud%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
    <id>www.kowen.cn/2017/10/10/搭建你自己的私有云盘——Nextcloud配置教程/</id>
    <published>2017-10-10T06:45:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>目前很多免费网盘都关闭了，百度网盘也对普通用户进行限速，使用体验大大下降，因此萌生了自己创建网盘的想法。网上搜了很多教程，但是关于Nextcloud的都比较复杂，不易操作，所以想通过docker进行部署，最终在Docker Hub上找到了wonderfall创建的镜像，配置比较简单，在此记录配置过程，以提供给有需要的同学参考。</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>by <a href="https://www.kowen.cn">kowen</a> </p>
</blockquote>
<h2 id="Seafile、Owncloud还是Nextcloud"><a href="#Seafile、Owncloud还是Nextcloud" class="headerlink" title="Seafile、Owncloud还是Nextcloud"></a>Seafile、Owncloud还是Nextcloud</h2><p>以下是三个比较，Seafile企业版需要收费，所以以下Seafile都是指社区版，最后选择Nextcloud：</p>
<ol>
<li>NextCloud是Owncloud的新版，用新不用旧；</li>
<li>Seafile社区版不支持搜索，Nextcloud可搜索当前目录文件，不能搜索子目录，仅起列表过滤的作用，但Nextcloud通过插件支持全文搜索；</li>
<li>两者都支持浏览器和手机在线播放视频;</li>
<li>两者IOS端都支持同步照片和视频，都可以后台同步，但是同步效果感觉Nextcloud更快更好，图标上显示待同步数量，同步过程中标题栏下方有滑动条，Seafile只能进入设置选项查看当前同步情况；</li>
<li>Nextcloud浏览器和IOS端有照片视图，Seafile没有；</li>
<li>两者手机端都支持查看txt、pdf、office文件，web端不支持office文件编辑；</li>
<li>Seafile是国产软件，中文文档齐全，Nextcloud缺少英文文档，可能会走弯路；</li>
<li>Nextcloud有丰富的第三方应用插件库可供选择.</li>
</ol>
<h2 id="准备工作：安装docker和docker-compose"><a href="#准备工作：安装docker和docker-compose" class="headerlink" title="准备工作：安装docker和docker-compose"></a>准备工作：安装docker和docker-compose</h2><p><a href="https://www.kowen.cn/2017/10/23/docker%E5%92%8Cdocker-compose%E5%AE%89%E8%A3%85/">点我查看安装教程</a></p>
<h2 id="编辑Docker-compose配置文件"><a href="#编辑Docker-compose配置文件" class="headerlink" title="编辑Docker-compose配置文件"></a>编辑Docker-compose配置文件</h2><p>拷贝以下内容并保存为docker-compose.yml，修改域名等相关参数<br> <figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="attr">version:</span> <span class="string">'2'</span></div><div class="line"></div><div class="line"><span class="attr"> networks:</span></div><div class="line"><span class="attr">   default:</span></div><div class="line"><span class="attr">     driver:</span> bridge</div><div class="line"></div><div class="line"><span class="attr"> services:</span></div><div class="line"><span class="attr">   nextcloud:</span></div><div class="line"><span class="attr">     image:</span> wonderfall/nextcloud</div><div class="line"><span class="attr">     container_name:</span> nextcloud</div><div class="line"><span class="attr">     depends_on:</span></div><div class="line"><span class="bullet">       -</span> nextcloud-db           <span class="comment"># 如果使用Mysql，企业环境建议</span></div><div class="line"><span class="bullet">       -</span> solr                   <span class="comment"># 如果开启全文搜索，查找文件更方便</span></div><div class="line"><span class="bullet">       -</span> redis                  <span class="comment"># 如果使用redis，用于php缓存，性能更快</span></div><div class="line"><span class="attr">     environment:</span></div><div class="line"><span class="bullet">       -</span> UID=<span class="number">1000</span></div><div class="line"><span class="bullet">       -</span> GID=<span class="number">1000</span></div><div class="line"><span class="bullet">       -</span> UPLOAD_MAX_SIZE=<span class="number">10</span>G   <span class="comment"># 文件上传大小限制</span></div><div class="line"><span class="bullet">       -</span> APC_SHM_SIZE=<span class="number">128</span>M</div><div class="line"><span class="bullet">       -</span> OPCACHE_MEM_SIZE=<span class="number">128</span></div><div class="line"><span class="bullet">       -</span> CRON_PERIOD=<span class="number">15</span>m</div><div class="line"><span class="bullet">       -</span> TZ=Asia/Shanghai</div><div class="line"><span class="bullet">       -</span> DOMAIN=localhost</div><div class="line"><span class="bullet">       -</span> DB_TYPE=mysql         <span class="comment"># 可选sqlite3, mysql或pgsql，默认数据库是sqlite3，我们使用Mysql（nextcloud-db）。</span></div><div class="line"><span class="bullet">       -</span> DB_NAME=nextcloud</div><div class="line"><span class="bullet">       -</span> DB_USER=nextcloud</div><div class="line"><span class="bullet">       -</span> DB_PASSWORD=supersecretpassword   <span class="comment"># 改为你的数据库密码</span></div><div class="line"><span class="bullet">       -</span> DB_HOST=nextcloud-db</div><div class="line"><span class="attr">     volumes:</span></div><div class="line"><span class="bullet">       -</span> /docker/nextcloud/data:/data      <span class="comment"># 数据目录</span></div><div class="line"><span class="bullet">       -</span> /docker/nextcloud/config:/config  <span class="comment"># config.php配置文件目录</span></div><div class="line"><span class="bullet">       -</span> /docker/nextcloud/apps:/apps2     <span class="comment"># 插件目录</span></div><div class="line"><span class="bullet">       -</span> /docker/nextcloud/themes:/nextcloud/themes  <span class="comment">#主题目录</span></div><div class="line"><span class="attr">     labels:</span></div><div class="line"><span class="bullet">       -</span> reverse.frontend.domain=cloud.example.com    <span class="comment">#改为你的域名或IP</span></div><div class="line"><span class="bullet">       -</span> reverse.backend.port=<span class="number">8888</span></div><div class="line"><span class="bullet">       -</span> reverse.frontend.ssl=<span class="literal">true</span>                    <span class="comment">#使用HTTPS访问 </span></div><div class="line"><span class="bullet">       -</span> reverse.frontend.ssltype=ec384</div><div class="line"><span class="bullet">       -</span> reverse.frontend.hsts=<span class="literal">false</span></div><div class="line"><span class="bullet">       -</span> reverse.frontend.headers=<span class="literal">false</span></div><div class="line"></div><div class="line">   <span class="comment"># 如果使用MySQL</span></div><div class="line"><span class="attr">   nextcloud-db:</span></div><div class="line"><span class="attr">     image:</span> mariadb:<span class="number">10</span></div><div class="line"><span class="attr">     container_name:</span> nextcloud-db</div><div class="line"><span class="attr">     volumes:</span></div><div class="line"><span class="bullet">       -</span> /docker/nextcloud/db:/var/lib/mysql</div><div class="line"><span class="attr">     environment:</span></div><div class="line"><span class="bullet">       -</span> MYSQL_ROOT_PASSWORD=supersecretpassword   <span class="comment"># 改为你的数据库密码</span></div><div class="line"><span class="bullet">       -</span> MYSQL_DATABASE=nextcloud                  </div><div class="line"><span class="bullet">       -</span> MYSQL_USER=nextcloud                      </div><div class="line"><span class="bullet">       -</span> MYSQL_PASSWORD=supersecretpassword        <span class="comment"># 改为你的数据库密码</span></div><div class="line"></div><div class="line">   <span class="comment"># 如果想开启全文搜索</span></div><div class="line"><span class="attr">   solr:</span></div><div class="line"><span class="attr">     image:</span> solr:<span class="number">6</span>-alpine</div><div class="line"><span class="attr">     container_name:</span> solr</div><div class="line"><span class="attr">     volumes:</span></div><div class="line"><span class="bullet">       -</span> /docker/nextcloud/solr:/opt/solr/server/solr/mycores</div><div class="line"><span class="attr">     entrypoint:</span></div><div class="line"><span class="bullet">       -</span> docker-entrypoint.sh</div><div class="line"><span class="bullet">       -</span> solr-precreate</div><div class="line"><span class="bullet">       -</span> nextant</div><div class="line"></div><div class="line">   <span class="comment"># 如果使用Redis</span></div><div class="line"><span class="attr">   redis:</span></div><div class="line"><span class="attr">     image:</span> redis:alpine</div><div class="line"><span class="attr">     container_name:</span> redis</div><div class="line"><span class="attr">     volumes:</span></div><div class="line"><span class="bullet">       -</span> /docker/nextcloud/redis:/data</div></pre></td></tr></table></figure></p>
<p>这里面包括四个容器服务，nextcloud，nextcloud-db（mysql），solr和redis，其中nextcloud是必须的，后面的服务不使用可以删除配置（同时要删除nextcloud中的依赖）。比如用户数少不想使用mysql，可删除depends_on:后面的- nextcloud-db以及后面的nextcloud-db配置段。nextcloud-db建议企业用户使用，redis作为缓存可以让服务器响应速度变得更快，solr提供了更好的搜索功能，你可以按需要自己配置。</p>
<blockquote>
<p><strong>注意</strong>：Nextcloud强烈建议启用https访问，reverse镜像会自动创建免费ssl证书（通过Let’s Encrypt），以提供https访问，但前提是在互联网上可以通过域名访问到你服务器。如果不能，请设置上面的参数reverse.frontend.ssl为false，然后通过http访问，否则nginx将启动失败。当然，如果你有自己的反向代理服务，可以从docker-compose.yml文件中删除reverse的相关配置。 </p>
</blockquote>
<h2 id="运行docker容器"><a href="#运行docker容器" class="headerlink" title="运行docker容器"></a>运行docker容器</h2><ol>
<li>进入在docker-compose.yml目录</li>
<li><p>运行数据库容器（不使用Mysql略过）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-compose up -d nextcloud-db</div></pre></td></tr></table></figure>
</li>
<li><p>运行其他容器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-compose up <span class="_">-d</span></div></pre></td></tr></table></figure>
</li>
<li><p>redis配置<br>如果doker-compose.yml添加了redis服务，需要编辑php配置来启用服务，配置文件路径是/docker/nextcloud/config/config.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="string">'memcache.distributed'</span> =&gt; <span class="string">'\OC\Memcache\Redis'</span>,</div><div class="line"><span class="string">'memcache.locking'</span> =&gt; <span class="string">'\OC\Memcache\Redis'</span>,</div><div class="line"><span class="string">'memcache.local'</span> =&gt; <span class="string">'\OC\Memcache\APCu'</span>,</div><div class="line"><span class="string">'redis'</span> =&gt; <span class="keyword">array</span>(</div><div class="line">   <span class="string">'host'</span> =&gt; <span class="string">'redis'</span>,</div><div class="line">   <span class="string">'port'</span> =&gt; <span class="number">6379</span>,</div><div class="line">   ),</div></pre></td></tr></table></figure>
</li>
<li><p>重启reverse容器</p>
<figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker <span class="built_in">restart</span> <span class="built_in">reverse</span></div></pre></td></tr></table></figure>
</li>
<li><p>配置solr<br>默认的文件查找功能只相当于一个列表过滤，无法搜索子文件夹,启用nextant插件借助solr服务可实现全文搜索，不光搜索文件名，还可以按文档的内容搜索。前提是在docker-compose.yml中配置了solr。<br>在配置过程中发现nextant无法连接solr，通过docker logs solr查看到错误信息“<br>cp: can’t create directory ‘/opt/solr/server/solr/mycores/nextant’: Permission denied”，<br>原来是没有权限，执行以下命令修改权限：</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod -R <span class="number">777</span> <span class="regexp">/docker/</span>nextcloud<span class="regexp">/solr</span></div></pre></td></tr></table></figure>
</li>
<li><p>重启solr</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">docker restart solr</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>通过docker logs solr查看，solr正常启动</p>
<h2 id="登录设置"><a href="#登录设置" class="headerlink" title="登录设置"></a>登录设置</h2><p>通过浏览器访问你的网站，第一次打开界面是这样的。</p>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98%E2%80%94%E2%80%94Nextcloud%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/%E9%A6%96%E6%AC%A1%E6%89%93%E5%BC%80%E9%85%8D%E7%BD%AE%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81.png?imageView/2/w/400" alt="首次打开"></p>
<p>输入用户名密码来创建管理员帐号</p>
<h2 id="使用Nextant开启全文搜索"><a href="#使用Nextant开启全文搜索" class="headerlink" title="使用Nextant开启全文搜索"></a>使用Nextant开启全文搜索</h2><p>打开Nextant的前提是前面安装了solr服务，</p>
<ol>
<li>管理员帐号登录，点击右上角齿轮图标，点击＂＋应用＂，点击＂应用软件包＂,点击files，找到Nextant，点击启用；  </li>
<li>点击右上角齿轮图标，选择管理，点击其他设置，找到Nextant (全文搜索)选项；</li>
<li>在Address of your solr servlet中输入<a href="http://solr:8983/solr" target="_blank" rel="noopener">http://solr:8983/solr</a> ，点击测试并保存，出现下图中右侧绿色对号提示即为连接成功。</li>
</ol>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98%E2%80%94%E2%80%94Nextcloud%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/%E9%85%8D%E7%BD%AEnextant.png?imageView/2/w/700" alt="Nextant配置"></p>
<h2 id="发现Nextcloud"><a href="#发现Nextcloud" class="headerlink" title="发现Nextcloud"></a>发现Nextcloud</h2><p>总体来说，Nextcloud是一款出类拔萃的私有云盘服务，支持windows、mac、linux、安卓、ios主流操作系统。提供了<a href="https://apps.nextcloud.com/" target="_blank" rel="noopener">丰富的插件</a>可以在线安装，比如在线编辑流程图编辑，office文件编辑、日历、联系人、笔记、视频聊天、邮件等等。</p>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98%E2%80%94%E2%80%94Nextcloud%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/%E4%B8%BB%E7%95%8C%E9%9D%A2?imageView/2/w/600" alt="主界面"></p>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98%E2%80%94%E2%80%94Nextcloud%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/iso%E4%B8%BB%E9%A1%B5.jpg?view_sjjp&quot;" alt="ios主界面"></p>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/%E6%90%AD%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98%E2%80%94%E2%80%94Nextcloud%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/ios%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0.jpg?view_sjjp" alt="自动上传设置"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://hub.docker.com/r/wonderfall/nextcloud/" target="_blank" rel="noopener">Wonderfall-NextCloud Docker镜像主页</a></li>
<li><a href="https://apps.nextcloud.com/" target="_blank" rel="noopener">Nextcloud第三方应用商店</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;目前很多免费网盘都关闭了，百度网盘也对普通用户进行限速，使用体验大大下降，因此萌生了自己创建网盘的想法。网上搜了很多教程，但是关于Nextcloud的都比较复杂，不易操作，所以想通过docker进行部署，最终在Docker Hub上找到了wonderfall创建的镜像，配置比较简单，在此记录配置过程，以提供给有需要的同学参考。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="干货" scheme="www.kowen.cn/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="网盘" scheme="www.kowen.cn/tags/%E7%BD%91%E7%9B%98/"/>
    
      <category term="nextcloud" scheme="www.kowen.cn/tags/nextcloud/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04安装StrongSwan VPN教程</title>
    <link href="www.kowen.cn/2017/09/14/Ubuntu16-04-%E5%AE%89%E8%A3%85StrongSwan-VPN%E6%95%99%E7%A8%8B/"/>
    <id>www.kowen.cn/2017/09/14/Ubuntu16-04-安装StrongSwan-VPN教程/</id>
    <published>2017-09-14T02:18:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<p>by <a href="http://www.kowen.cn">kowen</a></p>
<p>本文讲述了如何在Ubuntu16.04服务器上部署基于IKEv2的VPN服务，主要内容翻译自<a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-ikev2-vpn-server-with-strongswan-on-ubuntu-16-04" target="_blank" rel="noopener">How to Set Up an IKEv2 VPN Server with StrongSwan on Ubuntu 16.04</a>。<br><em>斜体部分是我的画蛇添足，在windows、ios亲测完全正常可用。</em></p>
<a id="more"></a>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><em>介绍看不懂的可以不看</em></p>
<p>VPN连接英文全名叫virtual private network，即虚拟专用网络，有了它你可以在一些不安全的网络（比如咖啡馆、机场的公共wifi接入网络）中实现可靠的加密信息传输。 <em>当然，国内最多的用途当然就是科学上网了</em></p>
<p>IKEv2,英文全称Internet Key Exchange v2，是一个让客户端服务器建立直接IPSec通道连接的协议。在基于IKEv2的 VPN中，IPSec为网络传输提供加密功能。<strong>IKEv2在OS X10.11+ IOS 9.1+ 和windows10中默认支持，不用安装其他软件</strong> <em>所以苹果手机也可以很方便的使用哦</em></p>
<p>本文将教你如何在ubuntu16.04服务器上使用<a href="https://www.strongswan.org/" target="_blank" rel="noopener">StrongSwan</a>建立一个IKEv2 VPN服务器，并在windows、IOS和mac客户端上连接。</p>
<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>你需要做以下准备：</p>
<ul>
<li>一台Ubuntu16.04服务器，按照<a href="https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04" target="_blank" rel="noopener">the Ubuntu 16.04 initial server setup guide</a>配置好，包括一个执行sudo命令的非root用户和防火墙。<em>特殊需求的用户服务器可以用<a href="https://www.sugarhosts.com/zh-cn/" target="_blank" rel="noopener">糖果主机</a>之类的vps, 不用个人配置，直接给你克隆好，包月40左右，英文不好的可以用糖果，网站是中文，服务人员也用中文，去度娘吧不多说了。另外，我直接用root用户配的</em>    </li>
</ul>
<p>另外，你需要先了解一下IPTables，你可以学习一下 <a href="https://www.digitalocean.com/community/tutorials/how-the-iptables-firewall-works" target="_blank" rel="noopener">How the Iptables Firewall Works </a>   <em>中文的教程：<a href="http://www.kowen.cn/2015/11/13/iptables/">iptables中文简明教程</a></em></p>
<h2 id="一、安装strongSwan"><a href="#一、安装strongSwan" class="headerlink" title="一、安装strongSwan"></a>一、安装strongSwan</h2><p>首先需要安装StrongSwan，它是一个开源的IPSec后台服务，在此我们把它配制成一个VPN服务器。不建议使用基于证书的登录验证方式，最好使用基于密码的客户端验证登录，使用StrongSwan EAP插件可以帮我们实现密码登录功能。还需要设置一些防火墙规则，所以我们还要安装一个保存防火墙规则的工具<em>防止重启后规则丢失</em></p>
<p>在服务器上执行以下命令安装上述程序<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">sudo</span> apt-<span class="meta">get</span> update</div><div class="line"><span class="symbol">sudo</span> apt-<span class="meta">get</span> install <span class="keyword">strongswan </span><span class="keyword">strongswan-plugin-eap-mschapv2 </span>moreutils iptables-persistent</div></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>注意</strong>：安装过程中会提示是否要保存当前 IPv4和IPv6规则。因为我们想保留目前的防火墙规则不变，都选择是即可。</p>
</blockquote>
<p>安装完成后，下一步是建立证书</p>
<h2 id="二、建立认证中心"><a href="#二、建立认证中心" class="headerlink" title="二、建立认证中心"></a>二、建立认证中心</h2><p>IKEv2服务器需要证书来向客户端验证自己的身份，StrongSwan给我们提供了生成认证中心和服务器证书的工具来帮助我们创建所需的证书。首先我们来创建一个文件夹来保存下面生成的各种文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir vpn-certs</div><div class="line">cd vpn-certs</div></pre></td></tr></table></figure>
<p>文件夹创建好后，需要创建根密钥，这是一个4096位的RSA密钥，它的用途是给认证中心进行签名。这个密钥非常重要，所以我们只给root用户读权限，其他用户不能访问。生成密钥的命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ipsec pki --gen --type rsa --size 4096 --outform pem &gt; server-root-key.pem</div><div class="line">chmod 600 server-root-key.pem</div></pre></td></tr></table></figure></p>
<p>接下来，建立根认证中心，使用刚才创建的密钥对认证中心进行签名。<em>注意下面一大垛是一条命令，一块复制到Shell下执行</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ipsec pki --self --ca --lifetime 3650 \</div><div class="line">--in server-root-key.pem \</div><div class="line">--type rsa --dn &quot;C=US, O=VPN Server, CN=VPN Server Root CA&quot; \</div><div class="line">--outform pem &gt; server-root-ca.pem</div></pre></td></tr></table></figure></p>
<p>你可以修改DN参数后的国家C、组织O和CN名称(Common Name)，CN名称在这只是一个名称，你可以胡编乱造。<em>这个时候你可以在vpn-certs下看到生成了两个文件server-root-key.pem和server-root-ca.pem</em></p>
<p>等会我们将复制根证书server-root-ca.pem到我们的客户端，这样客户端连接时就可以验证服务器了。</p>
<p>到现在根认证中心已经建好并运行，下面创建VPN服务器使用的证书。</p>
<h2 id="三、为VPN服务器生成证书"><a href="#三、为VPN服务器生成证书" class="headerlink" title="三、为VPN服务器生成证书"></a>三、为VPN服务器生成证书</h2><p>为VPN服务器生成证书，这个证书用于客户端验证服务器的真实性。</p>
<p>首先为VPN服务器创建一个密钥<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipsec pki --gen --type rsa --size 4096 --outform pem &gt; vpn-server-key.pem</div></pre></td></tr></table></figure></p>
<p>然后生成VPN服务器证书，用前面生成的认证中心的密钥对这个证书进行签名。先修改一下命令，把SERVER_NAME_OR_IP换成你服务器的DNS名称或者IP地址。<em>注意要替换两个SERVER_NAME_OR_IP,下面依然是一条命令</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ipsec pki --pub --in vpn-server-key.pem \</div><div class="line">--type rsa | ipsec pki --issue --lifetime 1825 \</div><div class="line">--cacert server-root-ca.pem \</div><div class="line">--cakey server-root-key.pem \</div><div class="line">--dn &quot;C=US, O=VPN Server, CN=SERVER_NAME_OR_IP&quot; \</div><div class="line">--san SERVER_NAME_OR_IP \</div><div class="line">--flag serverAuth --flag ikeIntermediate \</div><div class="line">--outform pem &gt; vpn-server-cert.pem</div></pre></td></tr></table></figure>
<p>把证书拷贝到配置目录以便StrongSwan读取</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo cp ./vpn-server-cert.pem /etc/ipsec.d/certs/vpn-server-cert.pem</div><div class="line">sudo cp ./vpn-server-key.pem /etc/ipsec.d/private/vpn-server-key.pem</div></pre></td></tr></table></figure>
<p>最后更改权限只允许root用户有读权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo chown root /etc/ipsec.d/private/vpn-server-key.pem</div><div class="line">sudo chgrp root /etc/ipsec.d/private/vpn-server-key.pem</div><div class="line">sudo chmod 600 /etc/ipsec.d/private/vpn-server-key.pem</div></pre></td></tr></table></figure></p>
<p>这样，我们已经建立了客户端和服务器安全通讯的证书对，还用根密钥对证书进行了签名以使客户端能验证VPN服务器的真实性。所有的证书文件都已准备好了，下面开始配置软件。</p>
<h2 id="四、配置StrongSwan"><a href="#四、配置StrongSwan" class="headerlink" title="四、配置StrongSwan"></a>四、配置StrongSwan</h2><p>前面步骤生成了所需要的证书，本节对StrongSwan进行配置。</p>
<p>StrongSwan有一个默认配置文件，在进行配置前，需要进行备份，以便搞错后进行恢复。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp /etc/ipsec.conf /etc/ipsec.conf.original</div></pre></td></tr></table></figure></p>
<p>默认配置文件相当长，为了防止配置出错，我们清除默认配置，从零开始写配置文件。首先，清除配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;&apos; | sudo tee /etc/ipsec.conf</div></pre></td></tr></table></figure></p>
<p><em>下面的步骤都是编辑配置文件，比较繁琐，本节最后有完整配置文件，建议本地编写好上传覆盖，完整配置文件中需要根据第5步修改@server_name_or_ip参数</em></p>
<p>然后编辑配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/ipsec.conf</div></pre></td></tr></table></figure></p>
<ol>
<li><p>首先开启StrongSwan的后台日志方便调试，允许多重连接。在文件中插入以下下几行：</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">config</span> <span class="built_in">setup</span></div><div class="line">  charondebug=<span class="string">"ike 1, knl 1, cfg 0"</span></div><div class="line">  uniqueids=no</div></pre></td></tr></table></figure>
</li>
<li><p>建立VPN配置，让StrongSwan建立IKEv2通道并且在它启动时自动加载该配置，再加入以下几行： </p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">conn ikev2-vpn</div><div class="line">  <span class="attr">auto=add</span></div><div class="line">  <span class="attr">compress=no</span></div><div class="line">  <span class="attr">type=tunnel</span></div><div class="line">  <span class="attr">keyexchange=ikev2</span></div><div class="line">  <span class="attr">fragmentation=yes</span></div><div class="line">  <span class="attr">forceencaps=yes</span></div></pre></td></tr></table></figure>
</li>
<li><p>加入StrongSwan VPN需要支持的通讯加密算法，再加入以下几行：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">ike</span>=aes256-sha1-modp1024,<span class="number">3</span>des-sha1-modp1024!</div><div class="line"><span class="attr">esp</span>=aes256-sha1,<span class="number">3</span>des-sha1!</div></pre></td></tr></table></figure>
</li>
<li><p>启用断开连接探测清理掉线的连接，再加入以下几行：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">dpdaction</span>=clear</div><div class="line"><span class="attr">dpddelay</span>=<span class="number">300</span>s</div><div class="line"><span class="attr">rekey</span>=<span class="literal">no</span></div></pre></td></tr></table></figure>
</li>
<li><p>配置服务器端（left）IPSec参数，添加以下几行（<strong>注意：</strong> 当配置leftid时，只有通过域名连接VPN服务器时才写@符号，比如@vpn.example.com，IP地址不用@符号，比如111.111.111.111）：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">left</span>=%any</div><div class="line"><span class="attr">leftid</span>=@server_name_or_ip</div><div class="line"><span class="attr">leftcert</span>=/etc/ipsec.d/certs/vpn-server-cert.pem</div><div class="line"><span class="attr">leftsendcert</span>=always</div><div class="line"><span class="attr">leftsubnet</span>=<span class="number">0.0</span>.<span class="number">0.0</span>/<span class="number">0</span></div></pre></td></tr></table></figure>
</li>
<li><p>配置客户端（right）IPSec参数，包括客户端连接后分配的IP地址段和DNS配置xxx</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">right</span>=%any</div><div class="line"><span class="attr">rightid</span>=%any</div><div class="line"><span class="attr">rightauth</span>=eap-mschapv2</div><div class="line"><span class="attr">rightsourceip</span>=<span class="number">10.10</span>.<span class="number">10.0</span>/<span class="number">24</span></div><div class="line"><span class="attr">rightdns</span>=<span class="number">8.8</span>.<span class="number">8.8</span>,<span class="number">8.8</span>.<span class="number">4.4</span></div><div class="line"><span class="attr">rightsendcert</span>=never</div></pre></td></tr></table></figure>
</li>
<li><p>最后，配置StrongSwan向客户端要求用户证书：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">eap_identity</span>=%identity</div></pre></td></tr></table></figure>
</li>
</ol>
<p>完整的配置文件如下：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">config setup</div><div class="line">    charondebug=<span class="string">"ike 1, knl 1, cfg 0"</span></div><div class="line">    uniqueids=no</div><div class="line"></div><div class="line">conn ikev2-vpn</div><div class="line">    auto=add</div><div class="line">    compress=no</div><div class="line">    type=tunnel</div><div class="line">    keyexchange=ikev2</div><div class="line">    fragmentation=yes</div><div class="line">    forceencaps=yes</div><div class="line">    ike=aes256-sha1-modp1024,<span class="number">3</span>des-sha1-modp1024!</div><div class="line">    esp=aes256-sha1,<span class="number">3</span>des-sha1!</div><div class="line">    dpdaction=clear</div><div class="line">    dpddelay=<span class="number">300</span>s</div><div class="line">    rekey=no</div><div class="line">    left=%any</div><div class="line">    leftid=@server_name_or_ip</div><div class="line">    leftcert=/etc/ipsec.d/certs/vpn-server-cert.pem</div><div class="line">    leftsendcert=always</div><div class="line">    leftsubnet=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span></div><div class="line">    right=%any</div><div class="line">    rightid=%any</div><div class="line">    rightauth=eap-mschapv2</div><div class="line">    rightdns=<span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>,<span class="number">8.8</span><span class="number">.4</span><span class="number">.4</span></div><div class="line">    rightsourceip=<span class="number">10.10</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">24</span></div><div class="line">    rightsendcert=never</div><div class="line">    eap_identity=%identity</div></pre></td></tr></table></figure>
<p>那么VPN参数配置完毕，下面介绍如何建立一个远程连接用户。</p>
<h2 id="五、配置VPN登录验证"><a href="#五、配置VPN登录验证" class="headerlink" title="五、配置VPN登录验证"></a>五、配置VPN登录验证</h2><p>到这里服务器已经可以接受客户端的连接了，但是我们还没有进行证书配置，证书配置文件是ipsec.secrets，这个文件的作用：</p>
<ul>
<li>告诉StrongSwan服务器证书私钥的位置，这样服务器才能加密解密传输的数据</li>
<li>建立VPN用户</li>
</ul>
<p>编辑配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/ipsec.secrets</div></pre></td></tr></table></figure></p>
<ol>
<li><p>告诉StrongSwan私钥的位置：</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">server_name_or_ip : <span class="type">RSA</span> <span class="string">"/etc/ipsec.d/private/vpn-server-key.pem"</span></div></pre></td></tr></table></figure>
</li>
<li><p>建立用户登陆凭证（用户名密码），用户名和密码随意取，但是必须注明允许StrongSwan接受用户来自任意地址的连接 </p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">your_username %any% : <span class="type">EAP</span> <span class="string">"your_password"</span></div></pre></td></tr></table></figure>
</li>
<li><p>关闭保存文件，重新启动ipsec服务启用新的配置。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ipsec reload</div></pre></td></tr></table></figure>
</li>
</ol>
<p>VPN服务器已经配置完毕，下面是最重要的一步：配置防火墙</p>
<h2 id="六、配置防火墙和IP转发"><a href="#六、配置防火墙和IP转发" class="headerlink" title="六、配置防火墙和IP转发"></a>六、配置防火墙和IP转发</h2><p>配置完VPN服务器后，需要对防火墙进行配置，以使防火墙允许和转发VPN流量。使用IPTables工具来实现。</p>
<ol>
<li><p>如果已经开启了UFW，先禁用，因为它会跟我们的配置冲突</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ufw <span class="built_in">disable</span></div></pre></td></tr></table></figure>
</li>
<li><p>删除所有UFW留下的防火墙规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo iptables -P INPUT ACCEPT</div><div class="line">sudo iptables -P FORWARD ACCEPT</div><div class="line">sudo iptables -F</div><div class="line">sudo iptables -Z</div></pre></td></tr></table></figure>
</li>
<li><p>为了防止SSH连接断开，先允许目前的连接，然后打开22或者自己设定的SSH端口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</div><div class="line">sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>
</li>
<li><p>允许本地回环地址的连接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo iptables -A INPUT -i lo -j ACCEPT</div></pre></td></tr></table></figure>
</li>
<li><p>允许IPSec连接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo iptables -A INPUT -p udp --dport  500 -j ACCEPT</div><div class="line">sudo iptables -A INPUT -p udp --dport 4500 -j ACCEPT</div></pre></td></tr></table></figure>
</li>
<li><p>设置IPTables转发ESp(Encapsulating Security Payload)流量。转发ESP流量，ESP可以在非可信网络中给我们VPN包增加额外保护。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo iptables -A FORWARD --match policy --pol ipsec --dir in  --proto esp -s 10.10.10.10/24 -j ACCEPT</div><div class="line">sudo iptables -A FORWARD --match policy --pol ipsec --dir out --proto esp -d 10.10.10.10/24 -j ACCEPT</div></pre></td></tr></table></figure>
</li>
<li><p>VPN服务器在客户端和网络之间扮演了网关的角色。因为VPN服务器只有一个公网IP，我们需要启用伪装让服务器代替客户端从互联网请求数据，这样就可以使数据在VPN客户端和服务器之间传输。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo iptables -t nat -A POSTROUTING -s 10.10.10.10/24 -o eth0 -m policy --pol ipsec --dir out -j ACCEPT</div><div class="line">sudo iptables -t nat -A POSTROUTING -s 10.10.10.10/24 -o eth0 -j MASQUERADE</div></pre></td></tr></table></figure>
</li>
<li><p>为了防止某些客户端的IP包拆分，设置IPTables包大小参数以减小包的大小，预防某些VPN客户端出问题。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo iptables -t mangle -A FORWARD --match policy --pol ipsec --dir in -s 10.10.10.10/24 -o eth0 -p tcp -m tcp --tcp-flags SYN,RST SYN -m tcpmss --mss 1361:1536 -j TCPMSS --set-mss 1360</div></pre></td></tr></table></figure>
</li>
<li><p>安全起见，禁止其他所有连接。<em>服务器上有其他服务的请用iptables工具打开相应端口</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo iptables -A INPUT -j DROP</div><div class="line">sudo iptables -A FORWARD -j DROP</div></pre></td></tr></table></figure>
</li>
<li><p><strong>保存防火墙配置，防止重启丢失</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo netfilter-persistent save</div><div class="line">sudo netfilter-persistent reload</div></pre></td></tr></table></figure>
</li>
<li><p>最后启用包转发功能，包转发用来将数据在服务器上从一个IP发送到另一个IP，实际上我们服务器就是一个转发器。编辑配置文件 /etc/sysctl.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/sysctl.conf</div></pre></td></tr></table></figure>
<p>需要配置的东西包括：</p>
<ul>
<li>启用IPv4转发</li>
<li>禁用Path MTU discovery防止包拆分问题</li>
<li>禁止接受和发送ICMP重定向，防止中间人攻击</li>
</ul>
<p>配置修改部分如下<em>（4个参数，前三个取消注释即可，最后一个自己添加）</em>：</p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">. . .</div><div class="line"></div><div class="line"># Uncomment the next line to enable packet forwarding <span class="keyword">for</span> IPv4</div><div class="line"><span class="built_in">net</span>.ipv4.ip_forward=<span class="number">1</span></div><div class="line">. . .</div><div class="line"># <span class="keyword">Do</span> <span class="keyword">not</span> accept ICMP redirects (prevent MITM attacks)</div><div class="line"><span class="built_in">net</span>.ipv4.conf.all.accept_redirects = <span class="number">0</span></div><div class="line"># <span class="keyword">Do</span> <span class="keyword">not</span> send ICMP redirects (we are <span class="keyword">not</span> a router)</div><div class="line"><span class="built_in">net</span>.ipv4.conf.all.send_redirects = <span class="number">0</span></div><div class="line">. . .</div><div class="line"><span class="built_in">net</span>.ipv4.ip_no_pmtu_disc = <span class="number">1</span></div></pre></td></tr></table></figure>
</li>
<li><p>重启服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo reboot</div></pre></td></tr></table></figure>
</li>
</ol>
<p><em>服务器配置已经完成，如果客户端连接正常就大功告成了，下面是连接方法</em></p>
<h2 id="七、测试连接"><a href="#七、测试连接" class="headerlink" title="七、测试连接"></a>七、测试连接</h2><p>VPN服务器已经配置完毕，下面来测试一下是否能正常连接。首先要下载根证书到本地，安装到你的客户机上。有两种方式，命令行打印输出和远程下载。</p>
<ul>
<li>方式一、命令行输出<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat ~/vpn-certs/server-root-ca.pem</div></pre></td></tr></table></figure>
</li>
</ul>
<p>你会看到<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby">----<span class="keyword">BEGIN</span> CERTIFICATE-----</span></div><div class="line">MIIFQjCCAyqgAwIBAgIIFkQGvkH4ej0wDQYJKoZIhvcNAQEMBQAwPzELMAkGA1UE</div><div class="line">. . .</div><div class="line">EwbVLOXcNduWK2TPbk/+82GRMtjftran6hKbpKGghBVDPVFGFT6Z0OfubpkQ9RsQ</div><div class="line">BayqOb/Q</div><div class="line">-<span class="ruby">----<span class="keyword">END</span> CERTIFICATE-----</span></div></pre></td></tr></table></figure></p>
<p>复制所有内容包括—–BEGIN CERTIFICATE—–和—–END CERTIFICATE—–到文字编辑器比如记事本，<br>然后保存，名称自己起，但后缀名必须是pem，比如vpn_root_certificate.pem。</p>
<ul>
<li>方式二、使用SFTP工具下载<br>不详述。</li>
</ul>
<p>一旦下载了根证书文件，就可以建立VPN连接了。<em>鸡动吧</em></p>
<h3 id="windows连接"><a href="#windows连接" class="headerlink" title="windows连接"></a>windows连接</h3><ul>
<li>首先导入根证书<ol>
<li>在运行中，输入mmc.exe，打开控制台窗口</li>
<li>从文件菜单中选择添加删除管理单元，弹出窗口中选择证书，添加</li>
<li>如果想要本地计算机所有用户都可以使用VPN连接，选择计算机账户，下一步</li>
<li>选择本地计算机，完成</li>
<li>依次展开证书-&gt;受信任的根证书办法机构（Trusted Root Certification Authorities)-证书</li>
<li>点击操作-&gt;所有任务-&gt;导入</li>
<li>选择证书文件vpn_root_certificate.pem，下一步</li>
<li>确认证书保存到收信人的根证书办法机构</li>
<li>完成导入成功。</li>
</ol>
</li>
<li>然后配置VPN连接<ol>
<li>打开控制面板，进入网络和共享中心</li>
<li>点击设置新的连接或网络，选择连接到工作区</li>
<li>选择使用我的Internet连接（VPN）</li>
<li>地址中输入服务器名称或者IP，目标名称可以随意起</li>
<li>输入用户名密码（ipsec.secret中配置的），域不填写，点击连接</li>
</ol>
</li>
</ul>
<p>创建后，你可以在网络列表中看到新建的VPN连接，选择然后点击连接，输入用户名密码即可连接。</p>
<h3 id="IOS连接"><a href="#IOS连接" class="headerlink" title="IOS连接"></a>IOS连接</h3><p>在苹果手机上连接VPN服务，请遵循一下步骤：</p>
<ol>
<li>把根证书文件作为附件发送到你的邮箱</li>
<li>用IOS登录邮箱，点击附件，点击安装，会要求输入你的ios密码，点击完成</li>
<li>打开“设置-&gt;通用-&gt;VPN”，点击添加VPN配置</li>
<li>类型选择 IKEv2</li>
<li>描述输入你给vpn连接起的名字</li>
<li>服务器和远程ID输入ip地址或域名，本地ID不用填</li>
<li>输入用户名、密码（ipsec.secret），点击完成</li>
<li>选择创建的vpn名称，点击连接</li>
</ol>
<h3 id="macOS连接"><a href="#macOS连接" class="headerlink" title="macOS连接"></a>macOS连接</h3><p><em>贫农没有mac，以下纯翻译，未验证，系统提示信息可能与实际不一致</em></p>
<ul>
<li><p>导入证书  </p>
<ol>
<li>双击证书文件，Keychain Access弹出窗口提示“Keychain Access试图更改系统keychain，输入密码允许”</li>
<li>输入密码，点击允许更改Keychain</li>
<li>双击导入的vpn证书，会弹出窗口指定信任级别，设置IP Security为Always Trust，再次输入密码，系统会自动保存配置。</li>
</ol>
</li>
<li><p>创建VPN连接</p>
<ol>
<li>进入系统设置（System Preference），选择网络</li>
<li>点击网络列表左下角加号按钮</li>
<li>弹出窗口中，设置接口为VPN， 配置VPN类型为IKEv2，给连接起一个名字</li>
<li>在服务器和远程ID中输入服务器域名或者IP，本地ID设置为空</li>
<li>点击认证设置，选择用户名，输入用户名密码，确定保存。</li>
</ol>
</li>
</ul>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>如果不能导入证书，请确认证书的后缀名是pem，而不是pem.txt或其他。</p>
<p>如果不能连接到VPN服务器，检查连接的服务器域名或地址是否正确。服务器的域名或IP地址必须和创建证书文件时配置的CN名称一致，否则vpn不能工作。比如你用CN参数为vpn.example.com建立证书，那你必须使用vpn.example.com来创建连接。执行生成证书命令和建立VPN连接时，要反复检查。</p>
<p>最后，检查VPN配置确保使用域名做leftid的时候前面一定要加@，使用IP时一定不加@。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leftid = @vpn.example.com</div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">leftid = 111.111.111.111</div></pre></td></tr></table></figure></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>按照本教程你已经建立好了一个支持IKEv2协议的VPN服务器，现在你可以在任何地方使用你的加密连接（科学上网）了。</p>
<p>添加或删除用户，只需要遵照步骤5设置即可，每个用户单独占一行。</p>
<p>StrongSwan输出日志到syslog，也许你想配置一个日志分析器，可以查看这篇文章<a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-logwatch-log-analyzer-and-reporter-on-a-vps" target="_blank" rel="noopener"> How To Install and Use Logwatch Log Analyzer and Reporter on a VPS </a>。</p>
<h2 id="翻译结语"><a href="#翻译结语" class="headerlink" title="翻译结语"></a>翻译结语</h2><blockquote>
<p>防火墙中间有一步转发忘了翻译，结果能连接不能上网，折腾了两天才发现，好累，有时间写个简明教程。</p>
<p>linode测试的ubuntu16.04，iptables配置完后不能正常保存，重启后配置丢失，sugarhost ssd的最低配置，网络很溜，油管秒开，高清视频非常流畅，就是偶尔有不稳定的时候。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;by &lt;a href=&quot;http://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文讲述了如何在Ubuntu16.04服务器上部署基于IKEv2的VPN服务，主要内容翻译自&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-set-up-an-ikev2-vpn-server-with-strongswan-on-ubuntu-16-04&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How to Set Up an IKEv2 VPN Server with StrongSwan on Ubuntu 16.04&lt;/a&gt;。&lt;br&gt;&lt;em&gt;斜体部分是我的画蛇添足，在windows、ios亲测完全正常可用。&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="www.kowen.cn/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="ubuntu" scheme="www.kowen.cn/tags/ubuntu/"/>
    
      <category term="VPN" scheme="www.kowen.cn/tags/VPN/"/>
    
      <category term="科学上网" scheme="www.kowen.cn/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="StrongSwan" scheme="www.kowen.cn/tags/StrongSwan/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装lighttpd</title>
    <link href="www.kowen.cn/2017/09/13/ubuntu-%E5%AE%89%E8%A3%85lighttpd/"/>
    <id>www.kowen.cn/2017/09/13/ubuntu-安装lighttpd/</id>
    <published>2017-09-13T02:35:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<p>by <a href="http://www.kowen.cn">kowen</a></p>
<blockquote>
<p>Lighttpd 是一个德国人领导的开源Web服务器软件，其根本的目的是提供一个专门针对高性能网站，安全、快速、兼容性好并且灵活的web server环境。具有非常低的内存开销、cpu占用率低、效能好以及丰富的模块等特点。</p>
</blockquote>
<a id="more"></a>
<ul>
<li><p>安装  </p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-<span class="built_in">get</span> <span class="keyword">update</span></div><div class="line">apt-<span class="built_in">get</span> install lighttpd</div></pre></td></tr></table></figure>
</li>
<li><p>启动服务  </p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service lighttpd <span class="literal">start</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>此时可以使用浏览器访问<br><img src="http://7xjylm.com1.z0.glb.clouddn.com/ubuntu%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AElighttpd/1.png" alt="默认主页"></p>
<ul>
<li><p>配置文件<br>默认设置文件是/etc/lighttpd/lighttpd.conf</p>
</li>
<li><p>添加虚拟主机<br>在配置文件最后添加</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$HTTP</span>[<span class="string">"host"</span>] == <span class="string">"www.funcool.xyz"</span> &#123;</div><div class="line">	server<span class="selector-class">.document-root</span> = <span class="string">"/var/www/blog"</span></div><div class="line">	server<span class="selector-class">.errorlog</span> = <span class="string">"/var/log/lighttpd/funcool-error.log"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>重启服务  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service lighttpd restart</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p><a href="http://redmine.lighttpd.net/projects/lighttpd/wiki/TutorialConfiguration" target="_blank" rel="noopener">五分钟配置教程（英文）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;by &lt;a href=&quot;http://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lighttpd 是一个德国人领导的开源Web服务器软件，其根本的目的是提供一个专门针对高性能网站，安全、快速、兼容性好并且灵活的web server环境。具有非常低的内存开销、cpu占用率低、效能好以及丰富的模块等特点。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="干货" scheme="www.kowen.cn/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="lighttpd" scheme="www.kowen.cn/tags/lighttpd/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu gnome启用VNC远程桌面</title>
    <link href="www.kowen.cn/2017/09/13/ubuntu-gnome%E5%90%AF%E7%94%A8VNC%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"/>
    <id>www.kowen.cn/2017/09/13/ubuntu-gnome启用VNC远程桌面/</id>
    <published>2017-09-13T01:55:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>by <a href="http://www.kowen.cn">kowen</a></p>
<p>vnc是ubuntu下常用的远程桌面工具，通常使用的方法是手动安装vncserver，然后编辑xstartup文件，比骄繁琐。本文介绍了一种使用系统设置工具实现vnc的方法，ubuntu版本是16.04LTS，桌面是gnome，unity下未测试。</p>
</blockquote>
<a id="more"></a>
<p><strong> 启用VNC远程桌面 </strong></p>
<ul>
<li>打开系统设置，点击共享</li>
</ul>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/ubuntu16.04%20gnome%20%E5%BC%80%E5%90%AFvnc%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/1.png" alt="系统设置"></p>
<ul>
<li>点击共享右上角开关启用共享</li>
</ul>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/ubuntu16.04%20gnome%20%E5%BC%80%E5%90%AFvnc%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/2.png" alt="开启共享"></p>
<ul>
<li>点击屏幕共享，点击左上角开关启用屏幕共享</li>
</ul>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/ubuntu16.04%20gnome%20%E5%BC%80%E5%90%AFvnc%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/3.png" alt="开启屏幕共享"></p>
<ul>
<li>启用远程控制，选择需要密码并输入</li>
</ul>
<p><em>我桌面电脑使用了双屏扩展，经测试发现vnc客户端连接后居然也是双屏</em></p>
<p><strong> VNC客户端 </strong></p>
<p>[1] <a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener">windows工具下载</a></p>
<p>[2] <a href="https://chrome.google.com/webstore/detail/vnc%C2%AE-viewer-for-google-ch/iabmpiboiopbgfabjmgeedhcmjenhbla?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="noopener">chrome应用</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;by &lt;a href=&quot;http://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;vnc是ubuntu下常用的远程桌面工具，通常使用的方法是手动安装vncserver，然后编辑xstartup文件，比骄繁琐。本文介绍了一种使用系统设置工具实现vnc的方法，ubuntu版本是16.04LTS，桌面是gnome，unity下未测试。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="干货" scheme="www.kowen.cn/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu安装ss服务</title>
    <link href="www.kowen.cn/2017/09/12/ubuntu%E5%AE%89%E8%A3%85ss%E6%9C%8D%E5%8A%A1/"/>
    <id>www.kowen.cn/2017/09/12/ubuntu安装ss服务/</id>
    <published>2017-09-12T03:39:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>by <a href="!http://www.kowen.cn">kowen</a></p>
</blockquote>
<p>科学上网利器shadowsocks服务端安装，不过多说明</p>
<a id="more"></a>
<p><strong>ubuntu安装命令</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get <span class="keyword">update</span></div><div class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> python-pip</div><div class="line">sudo pip <span class="keyword">install</span> shadowsocks</div></pre></td></tr></table></figure>
<p>如果出现错误提示<em>locale.Error: unsupported locale setting</em>可以执行以下命令重新安装<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> LC_ALL=C</div></pre></td></tr></table></figure></p>
<p><strong> 建立配置文件 </strong></p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi <span class="regexp">/etc/</span>shadowsocks.json*</div></pre></td></tr></table></figure>
<p>配置内容<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">    <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,   </div><div class="line">    <span class="attr">"server_port"</span>:<span class="number">9898</span>,  </div><div class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,  </div><div class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,  </div><div class="line">    <span class="attr">"password"</span>:<span class="string">"password"</span>,  </div><div class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,  </div><div class="line">    <span class="attr">"method"</span>:<span class="string">"rc4-md5"</span>,   </div><div class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span>  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><em>注意客户端连接时要和服务器参数一致</em></p>
<p><strong> 启动服务 </strong></p>
<ul>
<li><p>一般启动</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssserver -c <span class="regexp">/etc/</span>shadowsocks.json</div></pre></td></tr></table></figure>
</li>
<li><p>服务启动 </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssserver -c /etc/shadowsocks<span class="selector-class">.json</span> -d start</div></pre></td></tr></table></figure>
</li>
<li><p>服务关闭</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssserver -c /etc/shadowsocks<span class="selector-class">.json</span> -d stop</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;by &lt;a href=&quot;!http://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;科学上网利器shadowsocks服务端安装，不过多说明&lt;/p&gt;
    
    </summary>
    
      <category term="干货" scheme="www.kowen.cn/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="shadowsocks" scheme="www.kowen.cn/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>PyQt5入门教程（四）messagebox</title>
    <link href="www.kowen.cn/2017/09/01/PyQt5%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%88%E5%9B%9B%EF%BC%89messagebox/"/>
    <id>www.kowen.cn/2017/09/01/PyQt5入门教程（四）messagebox/</id>
    <published>2017-09-01T02:17:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文根据<a href="https://pythonspot.com/en/gui/" target="_blank" rel="noopener">pythonspot英文教程</a>编写,并加入了搜集的其他材料，by <a href="http://www.kowen.cn">kowen</a></p>
</blockquote>
<p>首先要引入 QmessageBox类：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QWidget, QPushButton, QMessageBox</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>然后调用QMessageBox.question()来显示消息窗口。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QWidget, QPushButton, QMessageBox</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QIcon</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> pyqtSlot</div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(QWidget)</span>:</span></div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.title = <span class="string">'PyQt5 messagebox - pythonspot.com'</span></div><div class="line">        self.left = <span class="number">10</span></div><div class="line">        self.top = <span class="number">10</span></div><div class="line">        self.width = <span class="number">320</span></div><div class="line">        self.height = <span class="number">200</span></div><div class="line">        self.initUI()</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.setWindowTitle(self.title)</div><div class="line">        self.setGeometry(self.left, self.top, self.width, self.height)</div><div class="line"> </div><div class="line">        buttonReply = QMessageBox.question(self, <span class="string">'PyQt5 message'</span>, <span class="string">"Do you like PyQt5?"</span>, QMessageBox.Yes | QMessageBox.No, QMessageBox.No)</div><div class="line">        <span class="keyword">if</span> buttonReply == QMessageBox.Yes:</div><div class="line">            print(<span class="string">'Yes clicked.'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'No clicked.'</span>)</div><div class="line"> </div><div class="line">        self.show()</div><div class="line"> </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = App()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure>
<p><img src="http://7xjylm.com1.z0.glb.clouddn.com/201709-PyQt5%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%88%E5%9B%9B%EF%BC%89messagebox/pyqt5-messagebox.png" alt="效果预览"></p>
<p><strong>在弹出消息上显示更多的按钮</strong></p>
<p>传入QMessageBox.Yes和QMessageBox.No可以方便的添加需要的按钮<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">buttonReply = QMessageBox.question(self, <span class="string">'PyQt5 message'</span>, <span class="string">"Do you want to save?"</span>, QMessageBox.Yes | QMessageBox.No | QMessageBox.Cancel, QMessageBox.Cancel)</div><div class="line"></div><div class="line">print(int(buttonReply))</div><div class="line"></div><div class="line"><span class="keyword">if</span> buttonReply == QMessageBox.Yes:</div><div class="line">     print(<span class="string">'Yes clicked.'</span>)</div><div class="line"><span class="keyword">if</span> buttonReply == QMessageBox.No:</div><div class="line">     print(<span class="string">'No clicked.'</span>)</div><div class="line"><span class="keyword">if</span> buttonReply == QMessageBox.Cancel:</div><div class="line">     print(<span class="string">'Cancel'</span>)</div></pre></td></tr></table></figure></p>
<p> PyQt5提供了丰富的按钮可供选择：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>QMessageBox.Cancel</td>
<td>QMessageBox.Ok</td>
<td>QMessageBox.Help</td>
</tr>
<tr>
<td>QMessageBox.Open</td>
<td>QMessageBox.Save</td>
<td>QMessageBox.SaveAll</td>
</tr>
<tr>
<td>QMessageBox.Discard</td>
<td>QMessageBox.Close</td>
<td>QMessageBox.Apply</td>
</tr>
<tr>
<td>QMessageBox.Reset</td>
<td>QMessageBox.Yes</td>
<td>QMessageBox.YesToAll</td>
</tr>
<tr>
<td>QMessageBox.No</td>
<td>QMessageBox.NoToAll</td>
<td>QMessageBox.NoButton</td>
</tr>
<tr>
<td>QMessageBox.RestoreDefaults</td>
<td>QMessageBox.Abort</td>
<td>QMessageBox.Retry</td>
</tr>
<tr>
<td>QMessageBox.Ignore</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文根据&lt;a href=&quot;https://pythonspot.com/en/gui/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pythonspot英文教程&lt;/a&gt;编写,并加入了搜集的其他材料，by &lt;a href=&quot;http://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先要引入 QmessageBox类：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; PyQt5.QtWidgets &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; QApplication, QWidget, QPushButton, QMessageBox&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="www.kowen.cn/categories/python/"/>
    
    
      <category term="PyQt5" scheme="www.kowen.cn/tags/PyQt5/"/>
    
      <category term="python" scheme="www.kowen.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PyQt5入门教程（三）buttons</title>
    <link href="www.kowen.cn/2017/08/31/PyQt5%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%89%EF%BC%89buttons/"/>
    <id>www.kowen.cn/2017/08/31/PyQt5入门教程（三）buttons/</id>
    <published>2017-08-31T07:06:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文根据<a href="https://pythonspot.com/en/gui/" target="_blank" rel="noopener">pythonspot英文教程</a>编写,并加入了搜集的其他材料，by <a href="http://www.kowen.cn">kowen</a></p>
</blockquote>
<p>PyQt5通过QPushButton类实现按钮功能，这个类在PyQt5.QtWidgets包里面。QPushButton构造器可以传入text参数设置按钮的显示文字。</p>
<a id="more"></a>
<p>使用QPushButton前需要先引入：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QWidget, QPushButton</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> pyqtSlot</div></pre></td></tr></table></figure>
<p>在initUI()方法中添加一下代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">button = QPushButton(<span class="string">'PyQt5 button'</span>, self)</div><div class="line">button.setToolTip(<span class="string">'This is an example button'</span>)</div><div class="line">button.move(<span class="number">100</span>,<span class="number">70</span>)</div></pre></td></tr></table></figure>
<p>QPushButton()创建按钮组件，并传入显示的文字参数。<em>setToolTip()</em>设置鼠标滑入时的提示信息。最后<em>move()</em>方法设置按钮显示的位置。</p>
<p>接下来为按钮建立点击触发的方法：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@pyqtSlot()</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_click</span><span class="params">(self)</span>:</span></div><div class="line">    print(<span class="string">'PyQt5 button click'</span>)</div></pre></td></tr></table></figure>
<p>将按钮点击和方法关联起来：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">button.clicked.connect(self.on_click)</div></pre></td></tr></table></figure>
<p>最后的代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QWidget, QPushButton</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QIcon</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> pyqtSlot</div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(QWidget)</span>:</span></div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.title = <span class="string">'PyQt5 button - pythonspot.com'</span></div><div class="line">        self.left = <span class="number">10</span></div><div class="line">        self.top = <span class="number">10</span></div><div class="line">        self.width = <span class="number">320</span></div><div class="line">        self.height = <span class="number">200</span></div><div class="line">        self.initUI()</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.setWindowTitle(self.title)</div><div class="line">        self.setGeometry(self.left, self.top, self.width, self.height)</div><div class="line"> </div><div class="line">        button = QPushButton(<span class="string">'PyQt5 button'</span>, self)</div><div class="line">        button.setToolTip(<span class="string">'This is an example button'</span>)</div><div class="line">        button.move(<span class="number">100</span>,<span class="number">70</span>) </div><div class="line">        button.clicked.connect(self.on_click)</div><div class="line"> </div><div class="line">        self.show()</div><div class="line"> </div><div class="line"><span class="meta">    @pyqtSlot()</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_click</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'PyQt5 button click'</span>)</div><div class="line"> </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = App()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure></p>
<p>效果展示</p>
<img src="/2017/08/31/PyQt5入门教程（三）buttons/pyqt5-buton.png" title="按钮">
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文根据&lt;a href=&quot;https://pythonspot.com/en/gui/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pythonspot英文教程&lt;/a&gt;编写,并加入了搜集的其他材料，by &lt;a href=&quot;http://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyQt5通过QPushButton类实现按钮功能，这个类在PyQt5.QtWidgets包里面。QPushButton构造器可以传入text参数设置按钮的显示文字。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="www.kowen.cn/categories/python/"/>
    
    
      <category term="PyQt5" scheme="www.kowen.cn/tags/PyQt5/"/>
    
      <category term="python" scheme="www.kowen.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PyQt5入门教程（二）Window</title>
    <link href="www.kowen.cn/2017/08/30/Pyqt5%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89Window/"/>
    <id>www.kowen.cn/2017/08/30/Pyqt5入门教程（二）Window/</id>
    <published>2017-08-30T00:57:00.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文根据<a href="https://pythonspot.com/en/gui/" target="_blank" rel="noopener">pythonspot英文教程</a>编写,并加入了搜集的其他材料，by <a href="http://www.kowen.cn">kowen</a></p>
</blockquote>
<p>通过以下代码可以创建PyQt5窗口<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QWidget</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QIcon</div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span><span class="params">(QWidget)</span>:</span></div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.title = <span class="string">'PyQt5 simple window - pythonspot.com'</span></div><div class="line">        self.left = <span class="number">10</span></div><div class="line">        self.top = <span class="number">10</span></div><div class="line">        self.width = <span class="number">640</span></div><div class="line">        self.height = <span class="number">480</span></div><div class="line">        self.initUI()</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.setWindowTitle(self.title)</div><div class="line">        self.setGeometry(self.left, self.top, self.width, self.height)</div><div class="line">        self.show()</div><div class="line"> </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = App()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure></p>
<p>通过setGeometry(left,top,width,height) 方法可以设置窗口的大小，setWindowTitle(title)方法可以设置窗口的标题，最后调用show()方法来显示窗口。</p>
<p>把代码存储为window.py,在终端使用以下语句运行程序：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python3 window.py</div></pre></td></tr></table></figure>
<img src="/2017/08/30/Pyqt5入门教程（二）Window/pyqt5-window-1.png" title="窗口">
<blockquote>
<p> QWidget类是所有用户界面对象的基类。 窗口部件是用户界面的一个基本单元：它从窗口系统接收鼠标、键盘和其它事件，并且在屏幕上绘制自己。每一个窗口部件都是矩形的，并且它们按Z轴顺序排列。一个窗口部件可以被它的父窗口部件或者它前面的窗口部件盖住一部分。</p>
<p>每一个PyQt5项目都需要创建一个QApplication对象。sys.argv则提供了命令行的一些参数，这样Python脚本就能从Shell运行，这是我们控制脚本开始运行的方式。</p>
<p>sys.exit()确保干净利落不留痕迹地退出。注意到这里的代码exec<em>(),exec后面还有个’</em>‘，这是因为exec是Python的关键字，为了避免冲突用了一个下短横。最后可以看到一个简单的窗口界面</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文根据&lt;a href=&quot;https://pythonspot.com/en/gui/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pythonspot英文教程&lt;/a&gt;编写,并加入了搜集的其他材料，by &lt;a href=&quot;http://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过以下代码可以创建PyQt5窗口&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="www.kowen.cn/categories/python/"/>
    
    
      <category term="PyQt5" scheme="www.kowen.cn/tags/PyQt5/"/>
    
      <category term="python" scheme="www.kowen.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PyQt5入门教程（一）概述</title>
    <link href="www.kowen.cn/2017/08/29/Pyqt5%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89%E6%A6%82%E8%BF%B0/"/>
    <id>www.kowen.cn/2017/08/29/Pyqt5入门教程（一）概述/</id>
    <published>2017-08-29T02:07:48.000Z</published>
    <updated>2019-04-08T09:06:12.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文根据<a href="https://pythonspot.com/en/gui/" target="_blank" rel="noopener">pythonspot英文教程</a>编写,并加入了搜集的相关资料，by <a href="http://www.kowen.cn">kowen</a></p>
</blockquote>
<p>python可以使用PyQt5，PyQt4，wxPython或Tkinter等模块来开发GUI图形界面，PyQt5是python开发图形界面最流行的开发组件。<br><a id="more"></a><br>PyQt5是一个用来开发GUI图形界面的组件，需要注意它和PyQt4不兼容。PyQt5需要安装python2.6以上版本，查看python版本的命令如下：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">python3</span> --<span class="keyword">version</span></div><div class="line"><span class="keyword">python</span> --<span class="keyword">version</span></div></pre></td></tr></table></figure></p>
<p>使用PyQt5前必须先安装，ubuntu安装命令：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> install <span class="keyword">python3</span>-pyqt5</div></pre></td></tr></table></figure></p>
<p>windows和Mac用户可以自行下载安装：</p>
<p><a href="https://www.riverbankcomputing.com/software/pyqt/download5" target="_blank" rel="noopener"><em>点我下载</em></a></p>
<p>或者通过pip安装</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 <span class="keyword">install</span> PyQt5</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文根据&lt;a href=&quot;https://pythonspot.com/en/gui/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pythonspot英文教程&lt;/a&gt;编写,并加入了搜集的相关资料，by &lt;a href=&quot;http://www.kowen.cn&quot;&gt;kowen&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;python可以使用PyQt5，PyQt4，wxPython或Tkinter等模块来开发GUI图形界面，PyQt5是python开发图形界面最流行的开发组件。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="www.kowen.cn/categories/python/"/>
    
    
      <category term="PyQt5" scheme="www.kowen.cn/tags/PyQt5/"/>
    
      <category term="python" scheme="www.kowen.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>容易忘记密码？快来试试Keepass</title>
    <link href="www.kowen.cn/2016/10/19/%E5%AE%B9%E6%98%93%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%EF%BC%9F%E5%BF%AB%E6%9D%A5%E8%AF%95%E8%AF%95Keepass/"/>
    <id>www.kowen.cn/2016/10/19/容易忘记密码？快来试试Keepass/</id>
    <published>2016-10-19T03:38:32.000Z</published>
    <updated>2019-04-08T09:06:12.051Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>KeePass是一款非常优秀的密码管理工具，它可以分类存储你的密码，它有很多好用的插件，自动帮你把用户名密码填充好，自动更新到云存储中，而且非常安全，最重要的，它是免费的哦。想 Try ？ Follow me！</p>
</blockquote>
<a id="more"></a>
<h2 id="1-为什么要使用密码管理器"><a href="#1-为什么要使用密码管理器" class="headerlink" title="1 为什么要使用密码管理器"></a>1 为什么要使用密码管理器</h2><p>你可能有这种体验：密码太多搞混了；一段时间不用的APP忘了密码不得不重置；有些不常访问的网站等填完信息点击注册后，才发现已经注册过。</p>
<p>你可能为了逃避忘记密码的麻烦，所有的网站、论坛、邮箱、网银都使用同一个密码，但你知道这样的危害有多大么？一旦某个论坛被攻击，用户信息被盗取，就相当于掌握了你的邮箱，你所有的信息都暴露了。国内用户信息被拖库的安全事故屡见不鲜，就连国内著名的技术论坛csdn、小米手机论坛都未能幸免。</p>
<p>所以使用不同的密码，并用好的方式记住它们，这是最明智的选择，密码管理器就是记录密码的最好方式。</p>
<h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2 安装"></a>2 安装</h2><ol>
<li>下载<br>KeePass的项目地址是：<a href="http://keepass.info/，" target="_blank" rel="noopener">http://keepass.info/，</a> 几乎支持当前所有的平台，包括windows、mac、linux、iso、安卓，甚至WindowsPhone、黑莓和Palm也有，绝对是业界良心。<br>当前最新的版本是2.34（2016-06-11）。下面是windows绿色版的下载链接，需要其他版本可以去官网自己下载。PS：如果官方链接不能下载（有时可能需要绕墙走），可以使用百度网盘（KeePass-2.34.zip）。</li>
</ol>
<ul>
<li><a href="http://freefr.dl.sourceforge.net/project/keepass/KeePass%202.x/2.34/KeePass-2.34.zip" target="_blank" rel="noopener">官方下载地址</a></li>
<li><a href="http://pan.baidu.com/s/1c1fYhS" target="_blank" rel="noopener">百度网盘下载</a> </li>
</ul>
<ol>
<li>安装<br>安装非常简单，解压KeePass-2.34.zip到一个目录比如C:\KeePass2\，右键KeePass.exe发送到桌面快捷方式就OK了。打开后界面看下图：<br><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/1.jpg" alt="@界面|center|400*0"></li>
<li>切换中文<br>KeePass默认语言是英文，如果需要其他语言支持，就需要下载语言插件。这也是KeePass的特点之一，最小化安装，需要其他功能支持，就安装相应的插件，自身小巧实用，丰富的插件支持使其拥有了七十二般变化的本领。</li>
</ol>
<ul>
<li>打开<a href="http://keepass.info/translations.html，找到五星红旗，点击后面的" target="_blank" rel="noopener">http://keepass.info/translations.html，找到五星红旗，点击后面的</a> [2.34+]就可以了。上面百度网盘中也有，Chinese_Traditional.lngx</li>
<li>解压拷贝到安装目录里(C:\KeePass2)，重启KeePass</li>
<li>点击菜单View-&gt;Change Language，选择Simplifed Chinese</li>
<li>重启KeePass，亲切的母语出现了<br>  <img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/2.jpg" alt="@中文界面|center|400*0"></li>
</ul>
<h2 id="3-使用KeePass记录你的密码"><a href="#3-使用KeePass记录你的密码" class="headerlink" title="3 使用KeePass记录你的密码"></a>3 使用KeePass记录你的密码</h2><p>KeePass的使用非常简单，看到界面基本就会了。KeePass中存储密码的文件叫密码数据库，一般来说一个就够用了，这个密码数据库一定要保管好，设置好访问密码，防止被他人拷贝后看到你的密码。</p>
<ol>
<li>新建一个密码数据库</li>
</ol>
<p><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/3.jpg" alt="@给密码库选择位置并取好名字|center|400*0"></p>
<p><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/4.jpg" alt="@输入管理密码|center|400*0"></p>
<p><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/5.jpg" alt="@输入其他配置信息|center|400*0"></p>
<p><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/6.jpg" alt="@完成后会有示例记录|center|400*0"></p>
<ol>
<li>创建一条密码记录<br><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/7.jpg" alt="@创建密码记录|center|400*0"><blockquote>
<p><strong>注意</strong>: 新增密码后，退出前要保存密码数据库，不然所做修改不会保存。</p>
</blockquote>
</li>
</ol>
<h2 id="4-让浏览器自动输入密码"><a href="#4-让浏览器自动输入密码" class="headerlink" title="4 让浏览器自动输入密码"></a>4 让浏览器自动输入密码</h2><p>和切换语言包一样，实现密码自动输入也是通过插件实现的，这里我们以谷歌浏览器chrome为例。实现这个功能需要两个插件，一个是KeePass提供密码输出服务的KeePassHttp，一个是chrome中接收密码的ChromeIPass插件。</p>
<p>###KeePassHttp<br>KeePassHttp给KeePass提供一个开放的服务，可以供其他插件比如浏览器自动输入密码工具提取密码用。可以在Github上下载<a href="https://raw.github.com/pfn/keepasshttp/master/KeePassHttp.plgx" target="_blank" rel="noopener">（点我）</a>，或者在上面的百度网盘中下载KeePassHttp.plgx。</p>
<p>把插件文件KeePassHttp.plgx复制到安装目录Plugins里面(C:\KeePass2\Plugins)，重启keepass，点击工具-&gt;插件管理器，列表中显示KeePassHttp则安装正确。<br>图片8</p>
<h3 id="chromeIPass"><a href="#chromeIPass" class="headerlink" title="chromeIPass"></a>chromeIPass</h3><p>KeePass提供了很多浏览器密码自动输入工具，经过授权后，可以根据访问网址自动从KeePassHttp提取密码，填充到用户名密码窗口中。其中chromeIPass是Chrome浏览器中的一款密码自动填充插件。</p>
<ul>
<li>安装<br> 使用chrome应用商店搜索添加chromeipass<br> <img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/9.jpg" alt="@chromeIPass|center|400*0"></li>
<li>设置<ol>
<li>点击chrome右上角的锁型图标，进入settings可以进行相关设置，默认设置下chromeIPass从localhost的19455端口和KeePassHttp交互，这里我们采取默认设置；</li>
<li>保持KeePass在启动状态，并打开了密码数据库；</li>
<li>点击右上角的图标，connect，输入一个名字比如“我的笔记本连接”并保存；<br><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/10.jpg" alt="@chromeIPass设置|center|400*0"></li>
<li>图标上的小红叉消失后，就证明连接成功了。congratulations！</li>
</ol>
</li>
</ul>
<p>来测试一下吧，在KeePass中建立一个豆瓣的测试用户名密码，注意一定要输入URL，建议输入到二级域名就可以，比如douban.com。<br><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/11.jpg" alt="@豆瓣密码自动输入|center|400*0"></p>
<blockquote>
<p><em>喜欢使用firefox的同学可以试一下PassIFox这个插件，Mac平台还可以用Passafari</em></p>
</blockquote>
<h2 id="5-在设备间同步密码数据库"><a href="#5-在设备间同步密码数据库" class="headerlink" title="5 在设备间同步密码数据库"></a>5 在设备间同步密码数据库</h2><p>你用密码的设备肯定不止一台，家里、单位都有台式机，出差还带个笔记本，手机有时也需要看一下密码，所以密码数据库同步功能必不可少。</p>
<p>KeePass自带同步功能，仅支持FTP、HTTP等最基本的协议，还需要服务器，对一般用户来说过于复杂。但KeePass提供了各种插件支持AmazonAWS、Google Drive、DropBox、OneDrive等网络存储，笔者目前用的是<a href="http://keepass.info/plugins.html#kpgsync" target="_blank" rel="noopener">KPGoogleSync</a>与Google Drive同步。</p>
<p>很可惜目前还没看到对国内网盘的支持，不过这个很好弥补，国内的网盘比如百度云，都有很强大的文件自动同步功能，大家把密码数据库文件设置为在各个设备之间自动同步就OK了。由于Keepass目前采用了安全系数最高的AES和TwoFish加密算法，所以你不用害怕网盘被攻破密码数据库文件被盗走，<strong>前提是你一定要设置复杂度较高的管理密码。</strong></p>
<h2 id="6-手机中查看密码"><a href="#6-手机中查看密码" class="headerlink" title="6 手机中查看密码"></a>6 手机中查看密码</h2><p>偶尔去网吧上网，需要登录密码了怎么办？Easy，从网盘上下载下来用手机查看就ok了，笔者用的是IOS的MiniKeePass，安卓用户可以使用KeePassDroid。<br><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/13.jpg" alt="@iphone查看密码|center|100*0"></p>
<p>KeePass支持的列表，可以去官网下载。<br><img src="http://app.kowen.cn:8082/funcool/rongyiwangjimima/14.jpg" alt="@支持列表|center|400*0"></p>
<h2 id="7-相关资料"><a href="#7-相关资料" class="headerlink" title="7 相关资料"></a>7 相关资料</h2><p>【KeePass官网】<a href="http://keepass.info/" target="_blank" rel="noopener">http://keepass.info/</a><br>【KeePass插件库】<a href="http://keepass.info/plugins.html" target="_blank" rel="noopener">http://keepass.info/plugins.html</a><br>【网盘下载链接】<a href="http://pan.baidu.com/s/1c1fYhS" target="_blank" rel="noopener">http://pan.baidu.com/s/1c1fYhS</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;KeePass是一款非常优秀的密码管理工具，它可以分类存储你的密码，它有很多好用的插件，自动帮你把用户名密码填充好，自动更新到云存储中，而且非常安全，最重要的，它是免费的哦。想 Try ？ Follow me！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="干货" scheme="www.kowen.cn/categories/%E5%B9%B2%E8%B4%A7/"/>
    
    
      <category term="Keepass" scheme="www.kowen.cn/tags/Keepass/"/>
    
      <category term="密码" scheme="www.kowen.cn/tags/%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 14.04 使用gitolite安装git服务器</title>
    <link href="www.kowen.cn/2016/03/18/Ubuntu-14-04-%E4%BD%BF%E7%94%A8gitolite%E5%AE%89%E8%A3%85git%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>www.kowen.cn/2016/03/18/Ubuntu-14-04-使用gitolite安装git服务器/</id>
    <published>2016-03-18T08:03:57.000Z</published>
    <updated>2019-04-08T09:06:12.051Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Ubuntu 14.04 使用gitolite安装git服务器</strong></p>
<p><em>以前用gitosis配置过git服务器（<a href="http://kowen.iteye.com/blog/2101784" target="_blank" rel="noopener">教程</a>），但总感觉配置比较复杂，最近实验了gitolite感觉不错</em><br><a id="more"></a></p>
<h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><ul>
<li><p>安装gitolite前，首先要安装 git，openssh-server和 openssh-client<br><code>sudo apt-get update</code><br><code>sudo apt-get -y install git openssh-server openssh-client</code></p>
</li>
<li><p>准备好你的ssh私钥和公钥<br>没有的话可在本地执行<code>ssh-keygen -t rsa -C &quot;yourname@example.com</code> 生成一个，生成后在~/.ssh/目录里，id_rsa是私钥，id_rsa.pub是公钥。</p>
</li>
</ul>
<h2 id="添加gitolite用户"><a href="#添加gitolite用户" class="headerlink" title="添加gitolite用户"></a>添加gitolite用户</h2><p><code>sudo adduser --system --shell /bin/sh --group --disabled-password --home /home/gitolite gitolite</code><br><em>使用命令添加加上–system参数，用户就不会在登陆界面显示</em></p>
<h2 id="安装gitolite"><a href="#安装gitolite" class="headerlink" title="安装gitolite"></a>安装gitolite</h2><p><code>sudo apt-get -y install gitolite</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">root@desktop:~#sudo apt-get -y install gitolite</div><div class="line">Reading package lists... Done</div><div class="line">Building dependency tree       </div><div class="line">Reading state information... Done</div><div class="line">The following packages were automatically installed and are no longer required:</div><div class="line">  ..此处省略一万字...</div><div class="line">  Use &apos;apt-get autoremove&apos; to remove them.</div><div class="line">Suggested packages:</div><div class="line">  git-daemon-run gitweb</div><div class="line">The following NEW packages will be installed:</div><div class="line">  gitolite</div><div class="line">0 upgraded, 1 newly installed, 0 to remove and 126 not upgraded.</div><div class="line">Need to get 246 kB of archives.</div><div class="line">After this operation, 552 kB of additional disk space will be used.</div><div class="line">Get:1 http://us.archive.ubuntu.com/ubuntu/ trusty/universe gitolite all 2.3-1 [246 kB]</div><div class="line">Fetched 246 kB in 0s (483 kB/s)</div><div class="line">Preconfiguring packages ...</div><div class="line">Selecting previously unselected package gitolite.</div><div class="line">(Reading database ... 301685 files and directories currently installed.)</div><div class="line">Preparing to unpack .../gitolite_2.3-1_all.deb ...</div><div class="line">Unpacking gitolite (2.3-1) ...</div><div class="line">Setting up gitolite (2.3-1) ...</div><div class="line">No adminkey given - not setting up gitolite.</div></pre></td></tr></table></figure>
<h2 id="初始化gitolite"><a href="#初始化gitolite" class="headerlink" title="初始化gitolite"></a>初始化gitolite</h2><ol>
<li>上传公钥id_rsa.pub到服务器tmp目录下</li>
<li>切换用户身份到gitolite<br><code>sudo su - gitolite</code></li>
<li>执行初始化命令<br><code>gl-setup /tmp/id_rsa.pub</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ gl-setup /tmp/id_rsa.pub</div><div class="line">The default settings in the rc file (/home/gitolite/.gitolite.rc) are fine for most</div><div class="line">people but if you wish to make any changes, you can do so now.</div><div class="line">hit enter...</div><div class="line">Select an editor.  To change later, run &apos;select-editor&apos;.</div><div class="line">  1. /bin/ed</div><div class="line">  2. /bin/nano    &lt;---- easiest</div><div class="line">  3. /usr/bin/vim.basic</div><div class="line">  4. /usr/bin/vim.tiny</div><div class="line"></div><div class="line">Choose 1-4 [2]: ^C</div></pre></td></tr></table></figure>
</li>
</ol>
<p><em>系统提示当前使用的是默认配置文件’/home/gitolite/.gitolite.rc’，如果需要修改，有四种编辑器可以选择（很贴心哦），不过我们一般通过gitolite-admin这个库远程配置，看下一节</em></p>
<h2 id="配置gitolite"><a href="#配置gitolite" class="headerlink" title="配置gitolite"></a>配置gitolite</h2><h3 id="克隆管理库到本地"><a href="#克隆管理库到本地" class="headerlink" title="克隆管理库到本地"></a>克隆管理库到本地</h3><p><code>git clone ssh://gitolite@SERVER_ADDRESS/gitolite-admin.git</code></p>
<h3 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h3><p>gitolite-admin里面两个文件夹keydir和conf：</p>
<ol>
<li>keydir存储用户的公钥，添加用户可以直接拷贝用户的公钥到此文件夹；</li>
<li>conf目录里的gitolite.conf是配置文件，格式如下：<figure class="highlight nsis"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">repogitolite-<span class="literal">admin</span></div><div class="line">    RW+     =   id_rsa</div><div class="line">repo    testing</div><div class="line">	    RW+     =   @<span class="literal">all</span></div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>gitolite.conf中， repo后面跟的是库名，底下跟着库的权限设置。push gitolite-admin到服务器后，服务器会根据你所做的修改配置git服务。<a href="https://git-scm.com/book/zh/v1/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-Gitolite" target="_blank" rel="noopener">具体可以参考Git-Scm的配置说明</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Ubuntu 14.04 使用gitolite安装git服务器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;以前用gitosis配置过git服务器（&lt;a href=&quot;http://kowen.iteye.com/blog/2101784&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;教程&lt;/a&gt;），但总感觉配置比较复杂，最近实验了gitolite感觉不错&lt;/em&gt;&lt;br&gt;
    
    </summary>
    
      <category term="git" scheme="www.kowen.cn/categories/git/"/>
    
    
      <category term="ubuntu" scheme="www.kowen.cn/tags/ubuntu/"/>
    
      <category term="git" scheme="www.kowen.cn/tags/git/"/>
    
      <category term="gitolite" scheme="www.kowen.cn/tags/gitolite/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 5.6 在windows上的安装和字符集修改</title>
    <link href="www.kowen.cn/2016/03/10/Mysql-5-6-%E5%9C%A8windows%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%AD%97%E7%AC%A6%E9%9B%86%E4%BF%AE%E6%94%B9/"/>
    <id>www.kowen.cn/2016/03/10/Mysql-5-6-在windows上的安装和字符集修改/</id>
    <published>2016-03-10T07:50:06.000Z</published>
    <updated>2019-04-08T09:06:12.051Z</updated>
    
    <content type="html"><![CDATA[<p><em>Mysql 5.6的安装简介</em></p>
<p><strong>MySQL Community Server 5.6.29下载</strong></p>
<p><a href="http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.29-win32.zip" target="_blank" rel="noopener">Windows 32Bit</a></p>
<p><a href="http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.29-winx64.zip" target="_blank" rel="noopener">Windows 64Bit</a><br><a id="more"></a></p>
<h3 id="解压到安装路径"><a href="#解压到安装路径" class="headerlink" title="解压到安装路径"></a>解压到安装路径</h3><p>Mysql 5.6不用运行安装程序，直接解压到你想安装的路径，例如：D:\Develop\mysql-5.6.21-winx64\</p>
<h3 id="添加PATH路径"><a href="#添加PATH路径" class="headerlink" title="添加PATH路径"></a>添加PATH路径</h3><p>添加<strong>“解压的路径/bin”</strong> 到PATH变量</p>
<h3 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h3><p>安装服务：mysqld –install<br>删除服务：mysqld –remove</p>
<h3 id="启动Mysql服务"><a href="#启动Mysql服务" class="headerlink" title="启动Mysql服务"></a>启动Mysql服务</h3><p>启动服务：net start mysql<br>停止服务：net stop mysql<br><em>或者使用服务管理工具</em></p>
<h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><p>console连接命令：<strong>mysql -u用户名 -p密码</strong></p>
<h3 id="更改默认root密码"><a href="#更改默认root密码" class="headerlink" title="更改默认root密码"></a>更改默认root密码</h3><p>默认管理员用户为root，密码空<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql –uroot</div><div class="line"><span class="keyword">set</span> <span class="keyword">password</span> <span class="keyword">for</span> root@localhost = <span class="keyword">password</span>(<span class="string">'123456'</span>);</div></pre></td></tr></table></figure></p>
<h3 id="查看字符编码"><a href="#查看字符编码" class="headerlink" title="查看字符编码"></a>查看字符编码</h3><p>运行 <strong>SHOW VARIABLES LIKE ‘character%’;</strong>  可以查看当前的字符编码，结果如下：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="section">mysql&gt; SHOW VARIABLES LIKE 'character%';</span></div><div class="line">+--------------------------+------------------------------------------------+</div><div class="line"><span class="section">| Variable_name            | Value                                          |</span></div><div class="line">+--------------------------+------------------------------------------------+</div><div class="line">| character<span class="emphasis">_set_</span>client     | gbk                                            |</div><div class="line">| character<span class="emphasis">_set_</span>connection | gbk                                            |</div><div class="line">| character<span class="emphasis">_set_</span>database   | latin1                                         |</div><div class="line">| character<span class="emphasis">_set_</span>filesystem | binary                                         |</div><div class="line">| character<span class="emphasis">_set_</span>results    | gbk                                            |</div><div class="line">| character<span class="emphasis">_set_</span>server     | latin1                                         |</div><div class="line">| character<span class="emphasis">_set_</span>system     | utf8                                           |</div><div class="line"><span class="section">| character_sets_dir       | D:\Develop\mysql-5.6.21-winx64\share\charsets\ |</span></div><div class="line">+--------------------------+------------------------------------------------+</div><div class="line">8 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h3 id="修改字符编码为UTF-8"><a href="#修改字符编码为UTF-8" class="headerlink" title="修改字符编码为UTF-8"></a>修改字符编码为UTF-8</h3><p><em>默认字符集运行的话，中文会变成乱码，所以需要修改默认字符集</em></p>
<ul>
<li><p>首先复制一份my-default.ini，改名为my.ini。注意只有my.ini才起作用，开始的时候我一直改my-default.ini，不起作用，折腾了好一阵。</p>
</li>
<li><p>然后打开my.ini,在[mysqld]下面添加以下几行：</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">init_connect=<span class="string">'SET collation_connection = utf8_unicode_ci'</span></div><div class="line">init_connect=<span class="string">'SET NAMES utf8'</span></div><div class="line"><span class="keyword">character</span>-<span class="built_in">set</span>-server=utf8</div><div class="line">collation-server=utf8_unicode_ci</div><div class="line">skip-<span class="keyword">character</span>-<span class="built_in">set</span>-client-handshake</div></pre></td></tr></table></figure>
</li>
<li><p>重新启动mysql服务，再查看字符编码 character_set_server已经变成了utf8:</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="section">mysql&gt; show variables like 'character%';</span></div><div class="line">+--------------------------+----------------------------+</div><div class="line"><span class="section">| Variable_name            | Value                      |</span></div><div class="line">+--------------------------+----------------------------+</div><div class="line">| character<span class="emphasis">_set_</span>client     | utf8                       |</div><div class="line">| character<span class="emphasis">_set_</span>connection | utf8                       |</div><div class="line">| character<span class="emphasis">_set_</span>database   | utf8                       |</div><div class="line">| character<span class="emphasis">_set_</span>filesystem | binary                     |</div><div class="line">| character<span class="emphasis">_set_</span>results    | utf8                       |</div><div class="line">| character<span class="emphasis">_set_</span>server     | utf8                       |</div><div class="line">| character<span class="emphasis">_set_</span>system     | utf8                       |</div><div class="line"><span class="section">| character_sets_dir       | /usr/share/mysql/charsets/ |</span></div><div class="line">+--------------------------+----------------------------+</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;Mysql 5.6的安装简介&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL Community Server 5.6.29下载&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.29-win32.zip&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows 32Bit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.29-winx64.zip&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows 64Bit&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="www.kowen.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="www.kowen.cn/tags/mysql/"/>
    
      <category term="字符集" scheme="www.kowen.cn/tags/%E5%AD%97%E7%AC%A6%E9%9B%86/"/>
    
      <category term="编码" scheme="www.kowen.cn/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>解决dwz在chrome中上传文件后不能正常显示返回消息的问题</title>
    <link href="www.kowen.cn/2016/01/29/%E8%A7%A3%E5%86%B3dwz%E5%9C%A8chrome%E4%B8%AD%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%90%8E%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E8%BF%94%E5%9B%9E%E6%B6%88%E6%81%AF%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>www.kowen.cn/2016/01/29/解决dwz在chrome中上传文件后不能正常显示返回消息的问题/</id>
    <published>2016-01-29T06:23:30.000Z</published>
    <updated>2019-04-08T09:06:12.051Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>由于form上传文件（enctype=”multipart/form-data”）不支持Ajax， dwz的解决思路是创建一个不可见的frame(style=”display:none”)，上传后把返回的json结果从iframe中提取出来(response = $iframe.contents().find(“body”).html();)转换成json(response = jQuery.parseJSON(response);)，再交给callback处理（navTabAjaxDone、dialogAjaxDone等）。</p>
</blockquote>
<a id="more"></a>
<p><strong> 文章来源  <a href="http://www.kowen.cn">www.kowen.cn</a> </strong></p>
<p>查看dwz.ajax.js的代码，处理上传主要是以下两个函数：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 带文件上传的ajax表单提交</div><div class="line"> * @param &#123;Object&#125; form</div><div class="line"> * @param &#123;Object&#125; callback</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">iframeCallback</span>(<span class="params">form, callback</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> $form = $(form), $iframe = $(<span class="string">"#callbackframe"</span>);</div><div class="line">	<span class="keyword">if</span>(!$form.valid()) &#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> ($iframe.size() == <span class="number">0</span>) &#123;</div><div class="line">		$iframe = $(<span class="string">"&lt;iframe id='callbackframe' name='callbackframe' src='about:blank' style='display:none'&gt;&lt;/iframe&gt;"</span>).appendTo(<span class="string">"body"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(!form.ajax) &#123;</div><div class="line">		$form.append(<span class="string">'&lt;input type="hidden" name="ajax" value="1" /&gt;'</span>);</div><div class="line">	&#125;</div><div class="line">	form.target = <span class="string">"callbackframe"</span>;</div><div class="line"></div><div class="line">	_iframeResponse($iframe[<span class="number">0</span>], callback || DWZ.ajaxDone);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">_iframeResponse</span>(<span class="params">iframe, callback</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> $iframe = $(iframe), $<span class="built_in">document</span> = $(<span class="built_in">document</span>);</div><div class="line"></div><div class="line">	$<span class="built_in">document</span>.trigger(<span class="string">"ajaxStart"</span>);</div><div class="line"></div><div class="line">	$iframe.bind(<span class="string">"load"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">		$iframe.unbind(<span class="string">"load"</span>);</div><div class="line">		$<span class="built_in">document</span>.trigger(<span class="string">"ajaxStop"</span>);</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (iframe.src == <span class="string">"javascript:'%3Chtml%3E%3C/html%3E';"</span> || <span class="comment">// For Safari</span></div><div class="line">			iframe.src == <span class="string">"javascript:'&lt;html&gt;&lt;/html&gt;';"</span>) &#123; <span class="comment">// For FF, IE</span></div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">var</span> doc = iframe.contentDocument || iframe.document;</div><div class="line"></div><div class="line">		<span class="comment">// fixing Opera 9.26,10.00</span></div><div class="line">		<span class="keyword">if</span> (doc.readyState &amp;&amp; doc.readyState != <span class="string">'complete'</span>) <span class="keyword">return</span>;</div><div class="line">		<span class="comment">// fixing Opera 9.64</span></div><div class="line">		<span class="keyword">if</span> (doc.body &amp;&amp; doc.body.innerHTML == <span class="string">"false"</span>) <span class="keyword">return</span>;</div><div class="line"></div><div class="line">		<span class="keyword">var</span> response;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (doc.XMLDocument) &#123;</div><div class="line">			<span class="comment">// response is a xml document Internet Explorer property</span></div><div class="line">			response = doc.XMLDocument;</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (doc.body)&#123;</div><div class="line">			<span class="keyword">try</span>&#123;</div><div class="line">				response = $iframe.contents().find(<span class="string">"body"</span>).html();</div><div class="line">				response = jQuery.parseJSON(response);</div><div class="line">			&#125; <span class="keyword">catch</span> (e)&#123; <span class="comment">// response is html document or plain text</span></div><div class="line">				response = doc.body.innerHTML;</div><div class="line">			&#125;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="comment">// response is a xml document</span></div><div class="line">			response = doc;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		callback(response);</div><div class="line">	&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>但在使用chrome开发（版本47）时，返回的结果不是按照正常的statusCode、message、callbackType结构被解析出来执行，而是直接把返回结果原封不动显示了出来。</p>
<p>使用调试工具可以看出这个过程:</p>
<p>当执行到iframeCallback函数最后一行时，iframe中的body还是空的，如下图。<br><img src="http://7xjylm.com1.z0.glb.clouddn.com/%E8%A7%A3%E5%86%B3dwz%E5%9C%A8chrome%E4%B8%AD%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%90%8E%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E8%BF%94%E5%9B%9E%E6%B6%88%E6%81%AF%E7%9A%84%E9%97%AE%E9%A2%98/1.png" alt=""><br>当执行到_iframeResponse函数的 $iframe.bind(“load”, function(event){ 这一行时，body里面已经有了返回的json结果，但是外层包上了pre标签，如下图： <img src="http://7xjylm.com1.z0.glb.clouddn.com/%E8%A7%A3%E5%86%B3dwz%E5%9C%A8chrome%E4%B8%AD%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%90%8E%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E8%BF%94%E5%9B%9E%E6%B6%88%E6%81%AF%E7%9A%84%E9%97%AE%E9%A2%98/2.png" alt=""></p>
<p>这说明chrome把返回的json结果填入iframe时，会给json外层嵌套一个pre标签，这样_iframeResponse把pre标签的内容转换json出错，捕获异常后就执行了response = doc.body.innerHTML， 把iframe标签的内容直接塞到response里面去了。</p>
<p>解决方法就是修改获取response的方法，把body改为pre,即：response = $iframe.contents().find(“pre”).html()。</p>
<p><em>仅限于chrome浏览器，其他浏览器下是否存在此问题和解决方法不清楚。</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;由于form上传文件（enctype=”multipart/form-data”）不支持Ajax， dwz的解决思路是创建一个不可见的frame(style=”display:none”)，上传后把返回的json结果从iframe中提取出来(response = $iframe.contents().find(“body”).html();)转换成json(response = jQuery.parseJSON(response);)，再交给callback处理（navTabAjaxDone、dialogAjaxDone等）。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="web前端" scheme="www.kowen.cn/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="dwz" scheme="www.kowen.cn/tags/dwz/"/>
    
      <category term="上传" scheme="www.kowen.cn/tags/%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
</feed>
